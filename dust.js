function new_filemap(e){return{src:e,start_pos:0,next_line:function(){return null}}}function str_to_ident(e){return e}function span_to_snippet(e){return rdr.src.substring(byte_offset(rdr,e.lo),byte_offset(rdr,e.hi))}function new_low_level_string_reader(e,t){var n="\n",i={span_diagnostic:e,src:t.src,pos:t.start_pos,last_pos:t.start_pos,col:0,curr:n,filemap:t,peek_tok:{},peek_span:null,fatal:function(e){terminate(e)},next_token:function(){alert("next_token not implemented")}};return bump(i),i}function mk_sp(e,t){return{lo:e,hi:t}}function fatal_span(e,t,n,i){e.peek_span=mk_sp(t,n),e.fatal(i)}function fatal_span_char(e,t,n,i,r){i+=": "+r,fatal_span(e,t,n,i)}function fatal_span_verbose(e,t,n,i){i+=": "+e.src.substring(byte_offset(e,t),byte_offset(e,n)),fatal_span(e,t,n,i)}function string_advance_token(e){var t=consume_whitespace_and_comments(e);if(t===Some(t))e.peek_span=t.sp,e.peek_tok=t.tok;else if(t===None)if(is_eof(e))e.peek_tok=token.EOF;else{var n=e.last_pos;e.peek_tok=next_token_inner(e),e.peek_span=mk_sp(n,e.last_pos)}}function byte_offset(e,t){return t-e.filemap.start_pos}function with_str_from(e,t,n){return with_str_from_to(e,t,e.last_pos,n)}function with_str_from_to(e,t,n,i){return i(e.src.substring(byte_offset(e,t),byte_offset(e,n)))}function bump(e){e.last_pos=e.pos;var t=byte_offset(e,e.pos);if(t<e.src.length){assert(-1!=e.curr);var n=e.curr,i={ch:e.src.charAt(t),next:t+1},r=i.next-t;e.pos=e.pos+r,e.curr=i.ch,e.col=e.col+1,"\n"==n&&(e.filemap.next_line(e.last_pos),e.col=0),r>1&&e.fatal("multibyte char not supported")}else e.curr=-1}function is_eof(e){return-1==e.curr}function nextch(e){var t=byte_offset(e,e.pos);return t<e.src.length?e.src.charAt(t):-1}function hex_digit_val(e){return in_range(e,"0","9")?e.charCodeAt(0)-"0".charCodeAt(0):in_range(e,"a","f")?e.charCodeAt(0)-"a".charCodeAt(0)+10:in_range(e,"A","F")?e.charCodeAt(0)-"A".charCodeAt(0)+10:void fail()}function is_whitespace(e){return" "==e||"	"==e||"\r"==e||"\n"==e}function in_range(e,t,n){return t.charCodeAt(0)<=e.charCodeAt(0)&&e.charCodeAt(0)<=n.charCodeAt(0)}function is_dec_digit(e){return in_range(e,"0","9")}function is_hex_digit(e){return in_range(e,"0","9")||in_range(e,"a","f")||in_range(e,"A","F")}function consume_whitespace_and_comments(e){for(;is_whitespace(e.curr);)bump(e);return consume_any_line_comment(e)}function is_line_non_doc_comment(e){return e.startsWith("////")}function consume_any_line_comment(e){if("/"==e.curr){var t=nextch(e);if("/"==t){if(bump(e),bump(e),"/"==e.curr||"!"==e.curr){for(var n=e.pos-3;"\n"!=e.curr&&!is_eof(e);)bump(e);var i=with_str_from(e,n,function(t){return is_line_non_doc_comment(t)?None:{tok:token.DOC_COMMENT(str_to_ident(t)),sp:mk_sp(n,e.pos)}});if(i==Some(i))return i}else for(;"\n"!=e.curr&&!is_eof(e);)bump(e);return consume_whitespace_and_comments(e)}if("*"==t)return bump(e),bump(e),consume_block_comment(e)}else"#"==e.curr&&"!"==nextch(e)&&e.fatal("shebang not supported");return None}function is_block_non_doc_comment(e){return e.startsWith("/***")}function consume_block_comment(e){for(var t="*"==e.curr||"!"==e.curr,n=e.pos-(t?3:2),i=1;i>0;)if(is_eof(e)){var r=t?"unterminated block doc-comment":"unterminated block comment";fatal_span(e,n,e.last_pos,r)}else"/"==e.curr&&"*"==nextch(e)?(i+=1,bump(e),bump(e)):"*"==e.curr&&"/"==nextch(e)?(i-=1,bump(e),bump(e)):bump(e);var a;return a=t?with_str_from(e,n,function(t){return is_block_non_doc_comment(t)?None:{tok:token.DOC_COMMENT(str_to_ident(t)),sp:mk_sp(n,e.pos)}}):None,a==Some(a)?a:consume_whitespace_and_comments(e)}function scan_exponent(e,t){var n=e.curr,i="";if("e"!=n&&"E"!=n)return None;i+=n,bump(e),n=e.curr,("-"==n||"+"==n)&&(i+=n,bump(e));var r=scan_digits(e,10);return r.length>0?i+r:void fatal_span(e,t,e.last_pos,"scan_exponent: bad fp literal")}function scan_digits(e,t){for(var n="";;){var i=e.curr;if("_"!=i){var r=parseInt(i,t);if(-1==i||isNaN(r))return n;n+=i,bump(e)}else bump(e)}}function scan_number(e,t){var n,i=10,r=nextch(t),a=t.last_pos;if("0"==e&&"x"==r?(bump(t),bump(t),i=16):"0"==e&&"o"==r?(bump(t),bump(t),i=8):"0"==e&&"b"==r&&(bump(t),bump(t),i=2),n=scan_digits(t,i),e=t.curr,nextch(t),"u"==e||"i"==e){var p="i"==e,l=p?"ty_i":"ty_u";bump(t),e=t.curr,"8"==e&&(bump(t),l=p?"ty_i8":"ty_u8"),r=nextch(t),"1"==e&&"6"==r?(bump(t),bump(t),l=p?"ty_i16":"ty_u16"):"3"==e&&"2"==r?(bump(t),bump(t),l=p?"ty_i32":"ty_u32"):"6"==e&&"4"==r&&(bump(t),bump(t),l=p?"ty_i64":"ty_u64"),0==n.length&&fatal_span(t,a,t.last_pos,"no valid digits found for number");var o=parseInt(n,i);return isNaN(o)&&fatal_span(t,a,t.last_pos,"int literal is too large"),l.startsWith("ty_i")?token.LIT_INT(o,l):token.LIT_UINT(o,l)}var s=!1;if("."==t.curr&&!ident_start(nextch(t))&&"."!=nextch(t)){s=!0,bump(t);var u=scan_digits(t,10);n+=".",n+=u}s&&(16==i?fatal_span(t,a,t.last_pos,"hexadecimal float literal is not supported"):8==i?fatal_span(t,a,t.last_pos,"octal float literal is not supported"):2==i&&fatal_span(t,a,t.last_pos,"binary float literal is not supported"));var c=scan_exponent(t,a);if(c==Some(c)&&(s=!0,n+=c),"f"==t.curr){if(bump(t),e=t.curr,r=nextch(t),"3"==e&&"2"==r)return bump(t),bump(t),token.LIT_FLOAT(str_to_ident(n),"ty_f32");if("6"==e&&"4"==r)return bump(t),bump(t),token.LIT_FLOAT(str_to_ident(n),"ty_f64");fatal_span(t,a,t.last_pos,"expected `f32` or `f64` suffix")}if(s)return token.LIT_FLOAT_UNSUFFIXED(str_to_ident(n));0==n.length&&fatal_span(t,a,t.last_pos,"no valid digits found for number");var o=parseInt(n,i);return isNaN(o)&&fatal_span(t,a,t.last_pos,"int literal is too large"),token.LIT_INT_UNSUFFIXED(o)}function scan_numeric_escape(e,t){var n=0,i=t;for(e.last_pos;0!=i;){var r=e.curr;is_hex_digit(r)||fatal_span_char(e,e.last_pos,e.pos,"illegal character in numeric character escape",r),bump(e),n*=16,n+=hex_digit_val(r),i-=1}return String.fromCharCode(n)}function ident_start(e){return e>="a"&&"z">=e||e>="A"&&"Z">=e||"_"==e}function ident_continue(e){return e>="a"&&"z">=e||e>="A"&&"Z">=e||e>="0"&&"9">=e||"_"==e}function next_token_inner(e){function t(e,t){return bump(e),"="==e.curr?(bump(e),token.BINOPEQ(t)):token.BINOP(t)}var n=e.curr;if(ident_start(n)&&'"'!=nextch(e)&&"#"!=nextch(e)){for(var i=e.last_pos;ident_continue(e.curr);)bump(e);return with_str_from(e,i,function(t){if("_"==t)return token.UNDERSCORE;var n=":"==e.curr&&":"==nextch(e);return token.IDENT(str_to_ident(t),n)})}if(is_dec_digit(n))return scan_number(n,e);if(";"==n)return bump(e),token.SEMI;if(","==n)return bump(e),token.COMMA;if("."==n)return bump(e),"."==e.curr?(bump(e),"."==e.curr?(bump(e),token.DOTDOTDOT):token.DOTDOT):token.DOT;if("("==n)return bump(e),token.LPAREN;if(")"==n)return bump(e),token.RPAREN;if("{"==n)return bump(e),token.LBRACE;if("}"==n)return bump(e),token.RBRACE;if("["==n)return bump(e),token.LBRACKET;if("]"==n)return bump(e),token.RBRACKET;if("@"==n)return bump(e),token.AT;if("#"==n)return bump(e),token.POUND;if("~"==n)return bump(e),token.TILDE;if(":"==n)return bump(e),":"==e.curr?(bump(e),token.MOD_SEP):token.COLON;if("$"==n)return bump(e),token.DOLLAR;if("="==n)return bump(e),"="==e.curr?(bump(e),token.EQEQ):">"==e.curr?(bump(e),token.FAT_ARROW):token.EQ;if("!"==n)return bump(e),"="==e.curr?(bump(e),token.NE):token.NOT;if("<"==n){bump(e);var r=e.curr;if("="==r)return bump(e),token.LE;if("<"==r)return t(e,token.SHL);if("-"==r){bump(e);var a=e.curr;return">"==a?(bump(e),token.DARROW):token.LARROW}return token.LT}if(">"==n){bump(e);var p=e.curr;return"="==p?(bump(e),token.GE):">"==p?t(e,token.SHR):token.GT}if("'"==n){bump(e);var i=e.last_pos,l=e.curr;if(bump(e),ident_start(l)&&"'"!=e.curr){for(;ident_continue(e.curr);)bump(e);return with_str_from(e,i,function(t){var n=str_to_ident(t),r=token.IDENT(n,!1);if(token.is_keyword(token.keywords.Self,r))fatal_span(e,i,e.last_pos,"invalid lifetime name: 'self is no longer a special lifetime");else{if(!token.is_any_keyword(r)||token.is_keyword(token.keywords.Static,r))return token.LIFETIME(n);fatal_span(e,i,e.last_pos,"invalid lifetime name")}})}if("\\"==l){var o=e.curr,s=e.last_pos;bump(e),"n"==o?l="\n":"r"==o?l="\r":"t"==o?l="	":"\\"==o?l="\\":"'"==o?l="'":'"'==o?l='"':"0"==o?l="\x00":"x"==o?l=scan_numeric_escape(e,2):"u"==o?l=scan_numeric_escape(e,4):"U"==o?l=scan_numeric_escape(e,8):fatal_span_char(e,s,e.last_pos,"unknown character escape",o)}else("	"==l||"\n"==l||"\r"==l||"'"==l)&&fatal_span_char(e,i,e.last_pos,"character constant must be escaped",l);return"'"!=e.curr&&fatal_span_verbose(e,i-1,e.last_pos,"unterminated character constant"),bump(e),token.LIT_CHAR(l.charCodeAt(0))}if('"'==n){var u="",c=e.last_pos;for(bump(e);'"'!=e.curr;){is_eof(e)&&fatal_span(e,c,e.last_pos,"unterminated double quote string");var h=e.curr;if(bump(e),"\\"==h){var o=e.curr,s=e.last_pos;bump(e),"n"==o?u+="\n":"r"==o?u+="\r":"t"==o?u+="	":"\\"==o?u+="\\":"'"==o?u+="'":'"'==o?u+='"':"\n"==o?consume_whitespace(e):"0"==o?u+="\x00":"x"==o?u+=scan_numeric_escape(e,2):"u"==o?u+=scan_numeric_escape(e,4):"U"==o?u+=scan_numeric_escape(e,8):fatal_span_char(e,s,e.last_pos,"unknown string escape",o)}else u+=h}return bump(e),token.LIT_STR(str_to_ident(u))}if("r"==n){var c=e.last_pos;bump(e);for(var f=0;"#"==e.curr;)bump(e),f+=1;'"'!=e.curr&&fatal_span_char(e,c,e.last_pos,"only `#` is allowed in raw string delimitation; found illegal character",e.curr),bump(e);var d,m=e.last_pos;e:for(;;){if(is_eof(e)&&fatal_span(e,c,e.last_pos,"unterminated raw string"),'"'==e.curr){d=e.last_pos;for(var E=0;f>E;E++)if(bump(e),"#"!=e.curr)continue e;break}bump(e)}bump(e);var T=with_str_from_to(e,m,d,str_to_ident);return token.LIT_STR_RAW(T,f)}return"-"==n?">"==nextch(e)?(bump(e),bump(e),token.RARROW):t(e,token.MINUS):"&"==n?"&"==nextch(e)?(bump(e),bump(e),token.ANDAND):t(e,token.AND):"|"==n?"|"==nextch(e)?(bump(e),bump(e),token.OROR):t(e,token.OR):"+"==n?t(e,token.PLUS):"*"==n?t(e,token.STAR):"/"==n?t(e,token.SLASH):"^"==n?t(e,token.CARET):"%"==n?t(e,token.PERCENT):void fatal_span_char(e,e.last_pos,e.pos,"unknown start of token",n)}function consume_whitespace(e){for(;is_whitespace(e.curr)&&!is_eof(e);)bump(e)}function escapeHtml(e){return e=e.replace(/&/g,"&amp;"),e=e.replace(/</g,"&lt;"),e=e.replace(/>/g,"&gt;")}function applyPropertyChain(e,t){for(var n,i=e,r=0;r<t.length;r++){if(n=t[r],!i.hasOwnProperty(n))return null;i=i[n]}return i}function cloneAssociativeArray(e){var t={};for(var n in e)t[n]=e[n];return t}function cloneArray(e){for(var t=[],n=0;n<e.length;n++)t.push(e[n]);return t}function TypeVariable(e){this.id=TYPE_VAR_ID++,this.name=e||null,this.instance=null,this.properties={}}function TypeOperator(e,t){this.name=e,this.instance=null,this.generics=[],this.types=t||[],this.properties={},this.slot=null}function containsGeneric(e,t,n){if(t=t||[],n=n||[],null===e)return!1;if(e.constructor===TypeVariable)return null!==e.name?!0:!1;if(-1!==n.indexOf(e))return!1;if(-1!==t.indexOf(e))return!1;if(t.push(e),e.slot&&containsGeneric(e.slot,t,n))return!0;for(var i=0;i<e.generics.length;i++)if(containsGeneric(e.generics[i],t,n))return!0;for(var i=0;i<e.types.length;i++)if(containsGeneric(e.types[i],t,n))return!0;for(var r in e.properties)if(containsGeneric(e.properties[r],t,n))return!0;var a=t.indexOf(e);return t.splice(a,1),n.push(e),!1}function unify(e,t){if(null!==e&&null!==t){if(!e||!t)throw"type not found";var n=prune(e),i=prune(t);if(n.constructor===TypeVariable){if(n!==i){if(null!==n.name){if(i.constructor===TypeOperator)throw"can not unify generic with "+i.name;if(null!==i.name)throw"can not unify generic";unify(i,n)}if(occursInType(n,i))throw"recursive unification";n.instance=i;for(var r in n.properties)i.properties.hasOwnProperty(r)?unify(n.properties[r],i.properties[r]):i.properties[r]=n.properties[r]}}else if(n.constructor===TypeOperator&&i.constructor===TypeVariable)unify(i,n);else{if(n.constructor!==TypeOperator||i.constructor!==TypeOperator)throw"not unified";if(n.name!==i.name)throw"type mismatch "+n.name+" vs "+i.name;if(n.generics.length!==i.generics.length)throw"type mismatch "+n.name+" (generic arity "+n.generics.length+") vs "+i.name+" (generic arity "+i.generics.length+")";if(n.types.length!==i.types.length)throw"type mismatch "+n.name+" (arity "+n.types.length+") vs "+i.name+" (arity "+i.types.length+")";for(var a=0;a<n.generics.length;a++)unify(n.generics[a],i.generics[a]);for(var a=0;a<n.types.length;a++)unify(n.types[a],i.types[a])}}}function assumeProperty(e,t){e.properties[t]=new TypeVariable,ASSUMED.push([e,t])}function pruneToProperty(e){return e.constructor===TypeOperator&&null!==e.slot?e.slot:prune(e)}function prune(e){return e.constructor===TypeVariable&&null!==e.instance?(e.instance=prune(e.instance),e.instance):e}function occursInType(e,t){var n=prune(t);return n===e?!0:n.constructor===TypeOperator?occursIn(e,n.types)||occursIn(e,n.generics):!1}function occursIn(e,t){for(var n=0;n<t.length;n++)if(occursInType(e,t[n]))return!0;return!1}function typePropertiesToString(e){if(null===e)return"";var t=[];for(var n in e.properties)t.push(n+": "+typeToString(e.properties[n],!1));return 0===t.length?"":" {"+t.join(";")+"}"}function typeToString(e,t){if(t=t||!1,null===e)return"!";var n;if(e.constructor===TypeVariable)null!==e.instance?n="ref "+typeToString(e.instance,t):null!==e.name?n=e.name:(n=e.id+"?",n+=t?typePropertiesToString(e):"");else{if(e.constructor!==TypeOperator)throw"neither TypeVariable nor TypeOperator "+e.constructor;n=e.name;for(var i=[],r=0;r<e.generics.length;r++)i.push(null!==e.generics[r].name?e.generics[r].name:typeToString(e.generics[r],t));(t||null!==e.instance)&&i.length>0&&(n+="<"+i.join(", ")+">");for(var a=[],r=0;r<e.types.length;r++)a.push(typeToString(e.types[r],t));a.length>0&&(n+="["+a.join(", ")+"]"),n+=t?typePropertiesToString(e):""}return n}function FileNode(e,t,n){this.name=e,this.isDir=t||!1,this.content=n||"",this.parent=null,this.children={}}function transpile(e,t){var n=FS.getNode(e);if(!n.name.endsWith(".rs"))throw"file "+e+" is not a '.rs' file";var i,r=n.name.substring(0,n.name.length-3);try{i=parse(n.content)}catch(a){throw a&&a.constructor===LocatedError&&null===a.path&&(a.path=e),a}var p;t=t||new Context;try{p=i.toSnippet(t)}catch(a){throw a&&a.constructor===LocatedError&&null===a.path&&(a.path=e),a}if(null!==p.exprType)try{unify(t.returnType,p.exprType)}catch(a){throw new LocatedError("Type checking failed: (last expression) "+a,null,e)}p.consumeTail();var l=new Snippet,o=[];for(var s in t.modChildrenEnv)t.modChildrenEnv[s].parent===t&&o.push(s);for(var s in t.typeChildrenEnv)t.typeChildrenEnv[s].parent===t&&o.push(s);for(var s in t.identChildrenEnv)t.identChildrenEnv[s].parent===t&&o.push(s);o.length>0&&l.append("\n");for(var u=0;u<o.length;u++)l.append("\nmodule.exports."+o[u]+" = "+o[u]+";");p.appendSnippet(l);for(var c=n.parent.toPath().split("/"),h=ENV,u=0;u<c.length;u++)0!==c[u].length&&(h.hasOwnProperty(c[u])||(h[c[u]]={}),h=h[c[u]]);return h[r]=t,p}function Context(e,t){if(this.parent=e||null,this.classification=t||"mod",this.returnType=null,this.modEnv={},this.typeEnv={},this.identEnv={},this.modChildrenEnv={},this.typeChildrenEnv={},this.identChildrenEnv={},"undefined"==typeof e){this.returnType=new TypeVariable;for(var n in TypeKeys)this.typeEnv[TypeKeys[n]]=new TypeOperator(TypeKeys[n])}}function LocatedError(e,t,n){this.msg=e,this.location=t||null,this.path=n||null}function exprToAST(e){function t(e){return null!==e&&e.constructor===NODE.Operator&&1===e.arity}function n(e){return null!==e&&e.constructor===NODE.Operator&&2===e.arity}function i(e){return null!==e&&!t(e)&&!n(e)}for(var r,a=[],p=[],l=null,o=null,s=!1;s||null!==(r=0===e.length?null:e.shift())||p.length>0;){if(!s){if(i(l)||t(l)&&!l.rightAssoc?i(r)||t(r)&&r.rightAssoc:null===r||n(r)||t(r)&&!r.rightAssoc)throw"invalid expression";if(l=r,i(r)){for(;null!==o&&t(o)&&o.rightAssoc;)p.pop(),r=new o.opConstructor(o.opVerbatim,r),o=0===p.length?null:p[p.length-1];a.push(r);continue}if(t(r)&&!r.rightAssoc){var u=a.pop();a.push(new r.opConstructor(r.opVerbatim,u));continue}}if(s=null===r?!0:null===o||t(r)||o.prec<r.prec?!1:o.prec>r.prec||!o.rightAssoc?!0:!1){if(null===o)break;p.pop();var c=a.pop(),u=a.pop();a.push(new o.opConstructor(o.opVerbatim,u,c)),o=0===p.length?null:p[p.length-1]}else p.push(r),o=r}return 0===a.length?null:a[0]}function testExprToAST(e){if(0===e.length)return null;var t=e.split(/\s+/).map(function(e){var t;switch(e){case"~":t=new NODE.Operator(NODE.UnaryOp,new NODE.Verbatim(e),1,!0);break;case"+":case"-":case"*":case"/":t=new NODE.Operator(NODE.BinaryOp,new NODE.Verbatim(e),2,6);break;case"<":t=new NODE.Operator(NODE.BinaryOp,new NODE.Verbatim(e),2,!1,6);break;case"&&":t=new NODE.Operator(NODE.BinaryOp,new NODE.Verbatim(e),2,!1,4);break;case".":t=new NODE.Operator(NODE.BinaryOp,new NODE.Verbatim(e),2,!1,9);break;case"=":t=new NODE.Operator(NODE.BinaryOp,new NODE.Verbatim(e),2,!0);break;default:t=new NODE.Verbatim(e)}return t}),n=exprToAST(t);return n.toString()}function Snippet(e,t,n){this.exprType=e||null,this.content=t||"",this.iv=null,this.tail=null,this.verbatims=n||[],this.isSorted=!1,this.context=null}function isTerminal(e){return!TABLE[e]}function extractTerminalAndValue(e){var t={PLUS:"+",MINUS:"-",STAR:"*",SLASH:"/",PERCENT:"%",CARET:"^",AND:"&",OR:"|",SHL:"<<",SHR:">>",EQ:"=",LT:"<",LE:"<=",EQEQ:"==",NE:"!=",GE:">=",GT:">",ANDAND:"&&",OROR:"||",NOT:"!",TILDE:"~",AT:"@",DOT:".",DOTDOT:"..",DOTDOTDOT:"...",COMMA:",",SEMI:";",COLON:":",MOD_SEP:"::",RARROW:"->",LARROW:"<-",DARROW:"<=>",FAT_ARROW:"=>",LPAREN:"(",RPAREN:")",LBRACKET:"[",RBRACKET:"]",LBRACE:"{",RBRACE:"}",POUND:"#",DOLLAR:"$",UNDERSCORE:"_",EOF:"$"},n=t[e.k];if("BINOP"===e.k?n=t[e.v]:"BINOPEQ"===e.k?n=t[e.v]+"=":"IDENT"===e.k&&token.is_any_keyword(e)&&"super"!==e.v&&(n=e.v),n)return{terminal:n,value:n};if("LIT_CHAR"===e.k)return{terminal:"litchar",value:JSON.stringify(String.fromCharCode(e.v))+".charCodeAt(0)"};if(-1!==["LIT_INT","LIT_UINT","LIT_INT_UNSUFFIXED"].indexOf(e.k))return{terminal:"litint",value:e.v.toString()};if(-1!==["LIT_FLOAT","LIT_FLOAT_UNSUFFIXED"].indexOf(e.k))return{terminal:"litfloat",value:e.v.toString()};if(-1!==["LIT_STR","LIT_STR_RAW"].indexOf(e.k))return{terminal:"litstr",value:JSON.stringify(e.v)};if("LIFETIME"===e.k)return{terminal:"lifetime",value:e.v};if("IDENT"===e.k)return{terminal:"ident",value:e.v};throw"unsupported token "+token.toString(e)}function getNextTerminalAndValue(e){if(string_advance_token(e),"DOC_COMMENT"===e.peek_tok.k)return getNextTerminalAndValue(e);if("IDENT"===e.peek_tok.k&&"ref"===e.peek_tok.v)return getNextTerminalAndValue(e);var t=extractTerminalAndValue(e.peek_tok);return"$"!==t.terminal&&(t.lo=e.peek_span.lo,t.hi=e.peek_span.hi,t.token=e.peek_tok),t}function getExpectedTerminal(e){var t=[];for(var n in TABLE[e])t.push(n);return t}function parse(input){var rdr=new_low_level_string_reader(null,{src:input,start_pos:0,next_line:function(){}}),stk=["$","S"],estk=[],counterStk=[],x,y,rule,$e,$a,msg,errPos;for(y=getNextTerminalAndValue(rdr);;){if(x=stk.pop(),">>"===y.terminal){if(!isTerminal(x)&&-1!==NT_WHOSE_FOLLOWSET_HAS_GT_NOT_SHR.indexOf(x)){rule=RULES[TABLE[x][">"]-1];for(var i=rule[1].length-1;i>=0;i--)stk.push(rule[1][i]);if(3!==rule.length)throw"missing instructions for rule "+rule[0]+" -> "+rule[1].join(" ");counterStk.push({count:rule[1].length,i:0,rhs:rule[1],code:rule[2]});continue}if(isTerminal(x)&&">>"===y.terminal&&">"===x){for($e=new NODE.Verbatim(">",y.lo,y.lo+1),estk.push($e),counterStk[counterStk.length-1].i++;counterStk[counterStk.length-1].i===counterStk[counterStk.length-1].count;){$a=[];for(var i=0;i<counterStk[counterStk.length-1].count;i++)$a.unshift(estk.pop());if(counterStk[counterStk.length-1].code&&eval(counterStk[counterStk.length-1].code),counterStk.pop(),0===counterStk.length)break;estk.push($e),counterStk[counterStk.length-1].i++}y={terminal:">",value:">",lo:y.lo+1,hi:y.hi};continue}}if(!isTerminal(x)||"e"!==x&&x!==y.terminal){if(!TABLE[x])throw errPos=rdr.last_pos,msg="",msg+="expected "+x,"$"!==y.terminal&&(errPos-=y.value.length,msg+=" but found `"+y.terminal+"`",y.terminal!==y.value&&(msg+=" ("+y.value+")")),new LocatedError("Parse error: "+msg,new NODE.Verbatim(y.value,errPos,errPos+1));if(!TABLE[x][y.terminal]||0===TABLE[x][y.terminal].length)throw errPos=rdr.last_pos,msg="",msg+=counterStk.length>0?"incomplete `"+counterStk[counterStk.length-1].rhs.join(" ")+"`":"expected "+getExpectedTerminal(x).join(" or "),"$"!==y.terminal&&(errPos-=y.value.length,msg+="; found `"+y.terminal+"`",y.terminal!==y.value&&(msg+=" ("+y.value+")")),new LocatedError("Parse error: "+msg,new NODE.Verbatim(y.value,errPos,errPos+1));if(TABLE[x][y.terminal].length>1)throw"not an LL1 parser";rule=RULES[TABLE[x][y.terminal]-1];for(var i=rule[1].length-1;i>=0;i--)stk.push(rule[1][i]);if(3!==rule.length)throw"missing instructions for rule "+rule[0]+" -> "+rule[1].join(" ");counterStk.push({count:rule[1].length,i:0,rhs:rule[1],code:rule[2]})}else{if("$"===x&&0===stk.length)break;for("ident"===x&&reportIdentifier(y.value),$e="e"===x?null:new NODE.Verbatim(y.value,y.lo,y.hi,y.token),estk.push($e),counterStk[counterStk.length-1].i++;counterStk[counterStk.length-1].i===counterStk[counterStk.length-1].count;){$a=[];for(var i=0;i<counterStk[counterStk.length-1].count;i++)$a.unshift(estk.pop());if(counterStk[counterStk.length-1].code&&eval(counterStk[counterStk.length-1].code),counterStk.pop(),0===counterStk.length)break;estk.push($e),counterStk[counterStk.length-1].i++}"e"!==x&&(y=getNextTerminalAndValue(rdr))}}return $e}function escapeCE(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\n/g,"<br>")}function rustSH(e){function t(e){return i.src.substring(byte_offset(i,e.lo),byte_offset(i,e.hi))}for(var n=[],i=new_low_level_string_reader(null,{src:e,start_pos:0,next_line:function(){}}),r=i.last_pos;i.peek_tok.k!==token.EOF.k;)string_advance_token(i),i.peek_tok.k!==token.EOF.k?(r<i.peek_span.lo&&n.push("<span style='color: gray;'>"+escapeCE(t(mk_sp(r,i.peek_span.lo)))+"</span>"),n.push("<span style='color: "+i.peek_tok.c+";'>"+escapeCE(t(i.peek_span))+"</span>"),r=i.peek_span.hi):r<i.last_pos&&n.push("<span style='color: gray;'>"+escapeCE(t(mk_sp(r,i.last_pos)))+"</span>");return n.join("")}function jsSH(e,t,n){if(t=t||0,n=n||0,t>n){var i=t;t=n,n=i}if(t===n)return"<span>"+escapeCE(e)+"</span>";var r=[];return r.push("<span>"+escapeCE(e.substring(0,t))+"</span>"),r.push("<span style='background-color: yellow;'>"+escapeCE(e.substring(t,n))+"</span>"),r.push("<span>"+escapeCE(e.substring(n))+"</span>"),r.join("")}function Backlit(e,t,n){this.id=e,this.el=document.getElementById(e),this.content=t,this.selectionStart=0,this.selectionEnd=0,this.sh=n}var Some=function(e){return null==e?"!some":e},None=null,fail=function(){terminate("fail!")},assert=function(e){e===!1&&terminate("assertion failure")},token={PLUS:{k:"PLUS",c:"rgb(0,200,0)"},MINUS:{k:"MINUS",c:"rgb(0,200,0)"},STAR:{k:"STAR",c:"rgb(0,200,0)"},SLASH:{k:"SLASH",c:"rgb(0,200,0)"},PERCENT:{k:"PERCENT",c:"rgb(0,200,0)"},CARET:{k:"CARET",c:"rgb(0,200,0)"},AND:{k:"AND",c:"rgb(0,200,0)"},OR:{k:"OR",c:"rgb(0,200,0)"},SHL:{k:"SHL",c:"rgb(0,200,0)"},SHR:{k:"SHR",c:"rgb(0,200,0)"},EQ:{k:"EQ",c:"rgb(0,200,0)"},LT:{k:"LT",c:"rgb(0,200,0)"},LE:{k:"LE",c:"rgb(0,200,0)"},EQEQ:{k:"EQEQ",c:"rgb(0,200,0)"},NE:{k:"NE",c:"rgb(0,200,0)"},GE:{k:"GE",c:"rgb(0,200,0)"},GT:{k:"GT",c:"rgb(0,200,0)"},ANDAND:{k:"ANDAND",c:"rgb(0,200,0)"},OROR:{k:"OROR",c:"rgb(0,200,0)"},NOT:{k:"NOT",c:"rgb(0,200,0)"},TILDE:{k:"TILDE",c:"rgb(0,200,0)"},BINOP:function(e){return{k:"BINOP",v:e.k,c:e.c}},BINOPEQ:function(e){return{k:"BINOPEQ",v:e.k,c:e.c}},AT:{k:"AT",c:"rgb(0,200,0)"},DOT:{k:"DOT",c:"rgb(0,200,0)"},DOTDOT:{k:"DOTDOT",c:"rgb(0,200,0)"},DOTDOTDOT:{k:"DOTDOTDOT",c:"rgb(0,200,0)"},COMMA:{k:"COMMA",c:"rgb(0,200,0)"},SEMI:{k:"SEMI",c:"rgb(0,200,0)"},COLON:{k:"COLON",c:"rgb(0,200,0)"},MOD_SEP:{k:"MOD_SEP",c:"rgb(0,200,0)"},RARROW:{k:"RARROW",c:"rgb(0,200,0)"},LARROW:{k:"LARROW",c:"rgb(0,200,0)"},DARROW:{k:"DARROW",c:"rgb(0,200,0)"},FAT_ARROW:{k:"FAT_ARROW",c:"rgb(0,200,0)"},LPAREN:{k:"LPAREN",c:"rgb(0,200,0)"},RPAREN:{k:"RPAREN",c:"rgb(0,200,0)"},LBRACKET:{k:"LBRACKET",c:"rgb(0,200,0)"},RBRACKET:{k:"RBRACKET",c:"rgb(0,200,0)"},LBRACE:{k:"LBRACE",c:"rgb(0,200,0)"},RBRACE:{k:"RBRACE",c:"rgb(0,200,0)"},POUND:{k:"POUND",c:"rgb(0,200,0)"},DOLLAR:{k:"DOLLAR",c:"rgb(0,200,0)"},LIT_CHAR:function(e){return{k:"LIT_CHAR",v:e,c:"rgb(0,200,200)"}},LIT_INT:function(e,t){return{k:"LIT_INT",v:e,tp:t,c:"rgb(200,0,0)"}},LIT_UINT:function(e,t){return{k:"LIT_UINT",v:e,tp:t,c:"rgb(200,0,0)"}},LIT_INT_UNSUFFIXED:function(e){return{k:"LIT_INT_UNSUFFIXED",v:e,c:"rgb(200,0,0)"}},LIT_FLOAT:function(e,t){return{k:"LIT_FLOAT",v:e,tp:t,c:"rgb(100,0,0)"}},LIT_FLOAT_UNSUFFIXED:function(e){return{k:"LIT_FLOAT_UNSUFFIXED",v:e,c:"rgb(100,0,0)"}},LIT_STR:function(e){return{k:"LIT_STR",v:e,c:"rgb(0,100,100)"}},LIT_STR_RAW:function(e,t){return{k:"LIT_STR_RAW",v:e,n:t,c:"rgb(0,150,150)"}},UNDERSCORE:{k:"UNDERSCORE",c:"rgb(0,200,0)"},LIFETIME:function(e){return{k:"LIFETIME",v:e,c:"rgb(0,0,100)"}},DOC_COMMENT:function(e){return{k:"DOC_COMMENT",v:e,c:"rgb(50,50,50)"}},IDENT:function(e,t){var n={k:"IDENT",v:e,is_mod:t};return n.c=!t&&token.is_any_keyword(n)?"#803C8D":"#256EB8",n},EOF:{k:"EOF",c:"rgb(0,0,0)"}};token.keywords={As:"as",Break:"break",Const:"const",Do:"do",Else:"else",Enum:"enum",Extern:"extern",False:"false",Fn:"fn",For:"for",If:"if",Impl:"impl",In:"in",Let:"let",__LogLevel:"__log_level",Loop:"loop",Match:"match",Mod:"mod",Mut:"mut",Once:"once",Priv:"priv",Pub:"pub",Ref:"ref",Return:"return",Static:"static",Self:"self",Struct:"struct",Super:"super",True:"true",Trait:"trait",Type:"type",Unsafe:"unsafe",Use:"use",While:"while",Continue:"continue",Proc:"proc",Alignof:"alignof",Be:"be",Offsetof:"offsetof",Pure:"pure",Sizeof:"sizeof",Typeof:"typeof",Yield:"yield"},token.is_any_keyword=function(e){for(var t in token.keywords)if("IDENT"===e.k&&e.v===token.keywords[t])return!0;return!1},token.is_keyword=function(e,t){return"IDENT"===t.k&&t.v===e},token.toString=function(e){var t={};for(var n in e)"c"!==n&&(t[n]=e[n]);return JSON.stringify(t)},"function"!=typeof String.prototype.endsWith&&(String.prototype.endsWith=function(e){return-1!==this.indexOf(e,this.length-e.length)}),"function"!=typeof String.prototype.startsWith&&(String.prototype.startsWith=function(e){return 0===this.indexOf(e)}),"function"!=typeof Array.prototype.indexOf&&(Array.prototype.indexOf=function(e){for(var t=-1,n=0;n<this.length;n++)if(this[n]===e){t=n;break}return t}),"function"!=typeof Array.prototype.map&&(Array.prototype.map=function(e){for(var t=[],n=0;n<this.length;n++)t.push(e(this[n]));return t}),"undefined"==typeof console&&(console={log:function(){}});var TYPE_VAR_ID=0,ASSUMED=[];TypeVariable.prototype.getFresh=function(e,t){if(e=e||[],t=t||[],null===this.name)return this;var n=e.indexOf(this);if(-1!==n)return t[n];var i=new TypeVariable;return e.push(this),t.push(i),i},TypeVariable.prototype.toHtmlString=function(){return escapeHtml(typeToString(this,!0))},TypeOperator.prototype.getFresh=function(e,t){if(e=e||[],t=t||[],!containsGeneric(this))return this;var n=new TypeOperator(this.name);n.instance=this,null!==this.slot&&(n.slot=this.slot.getFresh(e,t));for(var i=0;i<this.generics.length;i++)n.generics.push(this.generics[i].getFresh(e,t));for(var i=0;i<this.types.length;i++)n.types.push(null!==this.types[i]?this.types[i].getFresh(e,t):this.types[i]);for(var r in this.properties)n.properties[r]=this.properties[r].getFresh(e,t);return n},TypeOperator.prototype.toHtmlString=function(){return escapeHtml(typeToString(this,!0))};var TypeKeys={UNIT:"()",BOOL:"bool",CHAR:"char",INT:"int",STR:"str"},ENV={};FileNode.prototype.mkdir=function(e){for(var t=e.split("/"),n=this,i=0;i<t.length;i++){var r=t[i];if(0!==r.length){if(n.children.hasOwnProperty(r)){if(!n.children[r].isDir)throw r+" exists and is a file"}else n.children[r]=new FileNode(r,!0),n.children[r].parent=n;n=n.children[r]}}return n},FileNode.prototype.mkfile=function(e,t){var n=e.lastIndexOf("/"),i=this,r=e;if(-1!==n&&(i=this.mkdir(r.substring(0,n)),r=e.substring(n+1)),0===r.length)return i;if(i.children.hasOwnProperty(r)&&i.children[r].isDir)throw r+" exists and is a directory";return i.children[r]=new FileNode(r,!1,t),i.children[r].parent=i,i.children[r]},FileNode.prototype.exists=function(e){for(var t=e.split("/"),n=this,i=0;i<t.length;i++){var r=t[i];if(0!==r.length){if(!n.children.hasOwnProperty(r))return!1;n=n.children[r]}}return!0},FileNode.prototype.getNode=function(e){for(var t=e.split("/"),n=this,i=0;i<t.length;i++){var r=t[i];if(0!==r.length){if(!n.children.hasOwnProperty(r))throw r+" does not exist, looking for '"+e+"'";n=n.children[r]}}return n},FileNode.prototype.toPath=function(){for(var e=[],t=this;null!==t.parent;)e.unshift(t.name),t=t.parent;return"/"+e.join("/")},FileNode.prototype.tree=function(){var e=[];for(var t in this.children)e.push(this.children[t].toPath()+(this.children[t].isDir?"/":"")),this.children[t].isDir&&(e=e.concat(this.children[t].tree()));return e};var FS=new FileNode("/",!0);Context.prototype.getMod=function(e){if(this.modEnv.hasOwnProperty(e))return this.modEnv[e];if(null!==this.parent){var t=this.parent.getMod(e);return null===t?null:(this.modEnv[e]=t,this.parent.modChildrenEnv.hasOwnProperty(e)&&(this.modChildrenEnv[e]=this.parent.modChildrenEnv[e]),t)}return null},Context.prototype.setMod=function(e,t){this.modEnv[e]=t},Context.prototype.getType=function(e){if(this.typeEnv.hasOwnProperty(e))return this.typeEnv[e];if(null!==this.parent){var t=this.parent.getType(e);return null===t?null:(this.typeEnv[e]=t,this.parent.typeChildrenEnv.hasOwnProperty(e)&&(this.typeChildrenEnv[e]=this.parent.typeChildrenEnv[e]),t)}return null},Context.prototype.setType=function(e,t){this.typeEnv[e]=t},Context.prototype.getIdent=function(e){if(this.identEnv.hasOwnProperty(e))return this.identEnv[e];if(null!==this.parent){var t=this.parent.getIdent(e);return null===t?null:(this.identEnv[e]=t,this.parent.identChildrenEnv.hasOwnProperty(e)&&(this.identChildrenEnv[e]=this.parent.identChildrenEnv[e]||null),t)}return null},Context.prototype.setIdent=function(e,t){this.identEnv[e]=t},Context.prototype.getModChild=function(e){return this.modChildrenEnv[e]||null},Context.prototype.newModChild=function(e){var t=new Context(this,"mod");return this.modChildrenEnv[e]=t,t},Context.prototype.getTypeChild=function(e){return this.typeChildrenEnv[e]||null},Context.prototype.newTypeChild=function(e){var t=new Context(this,"type");return this.typeChildrenEnv[e]=t,t},Context.prototype.getIdentChild=function(e){return this.identChildrenEnv[e]||null},Context.prototype.newIdentChild=function(e){var t=new Context(this,"ident");return this.identChildrenEnv[e]=t,t},Context.prototype.toHtmlString=function(){var e="";e+="IDENTIFIERS<br />\n";for(var t in this.identEnv)e+="'"+t+"' has type "+escapeHtml(typeToString(this.identEnv[t],!1))+"<br />\n";e+="<br />\n",e+="TYPES<br />\n";for(var t in this.typeEnv)this.typeEnv[t].name!==t&&(e+=escapeHtml(t+" => ")),e+=escapeHtml(typeToString(this.typeEnv[t],!0))+"<br />\n";return e};var NODE={};NODE.Verbatim=function(e,t,n,i){this.value=e,this.lo=t,this.hi=n,this.token=i||null,this.jsLo=0,this.jsHi=0},NODE.Verbatim.prototype.toString=function(){return this.value},NODE.Verbatim.prototype.toSnippet=function(e){var t=new Snippet(e.getType(TypeKeys.UNIT));return t.append(this),t},NODE.LitBool=function(e){this.v=e},NODE.LitBool.prototype.toSnippet=function(e){var t=new Snippet(e.getType(TypeKeys.BOOL));return t.append(this.v),t},NODE.LitChar=function(e){this.v=e},NODE.LitChar.prototype.toSnippet=function(e){var t=new Snippet(e.getType(TypeKeys.CHAR));return t.append(this.v),t},NODE.LitInt=function(e){this.v=e},NODE.LitInt.prototype.toSnippet=function(e){var t=new Snippet(e.getType(TypeKeys.INT));return t.append(this.v),t},NODE.LitStr=function(e){this.v=e},NODE.LitStr.prototype.toSnippet=function(e){var t=new Snippet(e.getType(TypeKeys.STR));return t.append(this.v),t},NODE.Ident=function(e,t){this.v=e,this.isAnnotation=t||!1
},NODE.Ident.prototype.toSnippet=function(e){var t=this.v.token&&this.v.token.is_mod;if(t){var n=e.getMod(this.v.value);if(null!==n){var i=new Snippet(e.getType(TypeKeys.UNIT));return i.context=e.getModChild(this.v.value),i.append(this.v),i}}var r;if(this.isAnnotation&&(r=e.getType(this.v.value),null!==r)){var i=new Snippet(this.isAnnotation?r:r.getFresh());return i.context=e.getTypeChild(this.v.value),i.append(this.v),i}var a=e.getIdent(this.v.value),p=this.v.value.endsWith("!");if(null!==a){var i=new Snippet(a.getFresh());return i.context=e.getIdentChild(this.v.value),p?(i.append("MACRO['"),i.append(this.v),i.append("']")):i.append(this.v),i}if(r=e.getType(this.v.value),null!==r){var i=new Snippet(r.getFresh());return i.context=e.getTypeChild(this.v.value),i.append(this.v),i}throw new LocatedError("unknown identifier "+this.v.value,this.v)},NODE.As=function(e,t,n){this.a=t,this.v=e,this.b=n},NODE.As.prototype.toSnippet=function(e){var t=this.a.toSnippet(e),n=this.b.toType(e).getFresh(),i=new Snippet(n);return i.appendSnippet(t),i},NODE.Operator=function(e,t,n,i,r){this.opConstructor=e,this.opVerbatim=t,this.arity=n,this.rightAssoc=i||!1,this.prec=r||1},NODE.Operator.prototype.toSnippet=function(){throw new LocatedError("wrapper node, not a concrete node (use `exprToAST` first)",this.opVerbatim)},NODE.CmpOp=function(e,t,n){this.a=t,this.v=e,this.b=n},NODE.CmpOp.prototype.toSnippet=function(e){var t=new NODE.BinaryOp(this.v,this.a,this.b).toSnippet(e);return t.exprType=e.getType(TypeKeys.BOOL),t},NODE.BinaryOp=function(e,t,n){this.a=t,this.v=e,this.b=n},NODE.BinaryOp.prototype.toString=function(){var e=[];return e.push(this.a.constructor===NODE.Verbatim?this.a.value:this.a.toString()),null!==this.v&&e.push(this.v.value),e.push(this.b.constructor===NODE.Verbatim?this.b.value:this.b.toString()),"("+e.join(" ")+")"},NODE.BinaryOp.prototype.toSnippet=function(e){var t=this.a.toSnippet(e),n=this.b.toSnippet(e);try{unify(n.exprType,t.exprType)}catch(i){throw new LocatedError("Type checking failed: (binary operand types mismatch) "+i,this.v)}var r=new Snippet(t.exprType);return r.appendSnippet(t),r.append(" "),r.append(this.v),r.append(" "),r.appendSnippet(n),r},NODE.UnaryOp=function(e,t){this.v=e,this.a=t},NODE.UnaryOp.prototype.toString=function(){var e=[];return null!==this.v&&e.push(this.v.value),e.push(this.a.constructor===NODE.Verbatim?this.a.value:this.a.toString()),"("+e.join(" ")+")"},NODE.UnaryOp.prototype.toSnippet=function(e){var t=this.a.toSnippet(e),n=new Snippet(t.exprType);return n.append(this.v),n.appendSnippet(t),n},NODE.TrailingNot=function(e,t){if(t.constructor!==NODE.Ident)throw new LocatedError("suffix `!` for a macro can only occur after identifier",e);var n=new NODE.Verbatim(t.v.value+e.value,t.v.lo,e.hi);return new NODE.Ident(n,t.isAnnotation)},NODE.GenericArray=function(e){this.children=e},NODE.GenericArray.prototype.toSnippet=function(e){var t=new TypeOperator("[]"),n=new TypeVariable("T");t.generics.push(n);var i=t.getFresh(),r=new Snippet(i);r.append(this.children[0]);for(var a=0;a<this.children[1].length;a++){var p=this.children[1][a].toSnippet(e);try{unify(p.exprType,i.generics[0])}catch(l){throw new LocatedError("Type checking failed: (array element type mismatch) "+l,p.getLastVerbatim()||this.children[0])}0!==a&&r.append(", "),r.appendSnippet(p)}return r.append(this.children[2]),r},NODE.Tuple=function(e){this.children=e},NODE.Tuple.prototype.toSnippet=function(e){var t=[],n=new Snippet;if(0===this.children[1].length)n.exprType=e.getType(TypeKeys.UNIT),n.append("null",[this.children[0],this.children[2]]);else if(1===this.children[1].length){var i=this.children[1][0].toSnippet(e);n.exprType=i.exprType,n.append("(",this.children[0]),n.appendSnippet(i),n.append(")",this.children[2])}else{n.append("[",this.children[0]);for(var r=0;r<this.children[1].length;r++){var a=this.children[1][r].toSnippet(e);t.push(a.exprType),0!==r&&n.append(", "),n.appendSnippet(a)}n.append("]",this.children[2]),n.exprType=new TypeOperator("tuple",t)}return n},NODE.CallTuple=function(e){this.values=e},NODE.CallTuple.prototype.toSnippet=function(e){var t=[],n=new Snippet;n.append("(");for(var i=0;i<this.values.length;i++){var r=this.values[i].toSnippet(e);t.push(r.exprType),0!==i&&n.append(", "),n.appendSnippet(r)}return n.append(")"),n.exprType=new TypeOperator("calltuple",t),n},NODE.Apply=function(e,t,n){this.fn=t,this.v=null,this.arg=n},NODE.Apply.prototype.toSnippet=function(e){var t=this.fn.toSnippet(e);if(null!==t.context&&"type"===t.context.classification){var n=new NODE.TupleStruct(t,t.exprType,this.arg.values);return n.toSnippet(e)}var i=this.arg.toSnippet(e),r=new TypeVariable;t.exprType.types&&t.exprType.types.length>1&&null===t.exprType.types[1]&&(r=null);var a=new TypeOperator("->",[i.exprType,r]);a.generics=t.exprType.generics||[];try{unify(a,t.exprType)}catch(p){throw new LocatedError("Type checking failed: (function arguments) "+p,t.getLastVerbatim())}var l=new Snippet(r);return l.appendSnippet(t),l.appendSnippet(i),l},NODE.ApplyMacro=function(e,t,n){this.fn=t,this.v=null,this.arg=n},NODE.ApplyMacro.prototype.toSnippet=function(e){if(this.fn.constructor!==NODE.Ident)throw"macro with qualified name not supported";var t=this.fn.v.value;if(null===e.getIdent(t)){var n=new TypeOperator("MACRO");assumeProperty(n,t),e.setIdent(t,n.properties[t])}return new NODE.Apply(this.v,this.fn,this.arg).toSnippet(e)},NODE.ModProperty=function(e,t,n){this.lhs=t,this.v=e,this.rhs=n},NODE.ModProperty.prototype.toSnippet=function(e){var t=this.lhs.toSnippet(e),n=t.context;if(null===n)throw new LocatedError("identifier chain could not be resolved",this.v);if(this.rhs.constructor!==NODE.Ident){if("mod"===t.context.classification)throw new LocatedError("cannot apply generic on mod",this.v);var i=t.exprType;if(i.generics.length<this.rhs.length)throw new LocatedError("too many generic parameters",this.v);for(var r=0;r<this.rhs.length;r++)try{unify(i.generics[r],this.rhs[r].toType(e))}catch(a){throw new LocatedError("Type checking failed: (generic parameter) "+a,this.v)}return t.context=null,t}var p=this.rhs.toSnippet(n),l=new Snippet(p.exprType);return l.context=p.context,l.appendSnippet(t),l.append(".",this.v),l.appendSnippet(p),l},NODE.Property=function(e,t,n){if(n.constructor!==NODE.Ident)throw new LocatedError("property is expected to be an identifier",e);this.obj=t,this.v=e,this.name=n.v},NODE.Property.prototype.toSnippet=function(e){var t=this.obj.toSnippet(e),n=pruneToProperty(t.exprType),i=this.name.toString();n.properties.hasOwnProperty(i)||assumeProperty(n,i);var r=new Snippet(n.properties[i]);return r.appendSnippet(t),r.append(this.v),r.append(this.name),r},NODE.Struct=function(e,t){this.name=t,this.valueMap={};for(var n=0;n<e.length;n++)this.valueMap[e[n][0].value]=e[n]},NODE.Struct.prototype.toSnippet=function(e){var t=this.name.toSnippet(e),n=t.exprType,i=[],r=pruneToProperty(n);for(var a in this.valueMap){var p=this.valueMap[a][1].toSnippet(e);try{unify(p.exprType,r.properties[a])}catch(l){throw new LocatedError("Type checking failed: (struct field) "+l,this.valueMap[a][0])}i.push([this.valueMap[a][0],p])}var o=new Snippet(n);o.append("new "),o.appendSnippet(t),o.append("({\n");for(var s=new Snippet,u=0;u<i.length;u++)0!==u&&s.append(",\n"),s.append(i[u][0]),s.append(": "),s.appendSnippet(i[u][1]);return s.isEmpty()||(s.indent(),s.append("\n")),o.appendSnippet(s),o.append("})"),o},NODE.TupleStruct=function(e,t,n){this.nameSnippet=e,this.exprType=t,this.values=n},NODE.TupleStruct.prototype.toSnippet=function(e){var t=this.exprType.getFresh(),n=new Snippet(t);if(0===this.values.length)return n.appendSnippet(this.nameSnippet),n;for(var i=[],r=pruneToProperty(t),a=0;a<this.values.length;a++){var p=this.values[a].toSnippet(e);try{unify(p.exprType,r.properties[a])}catch(l){throw new LocatedError("Type checking failed: (struct field) "+l,p.getLastVerbatim())}i.push(p)}n.append("new "),n.appendSnippet(this.nameSnippet),n.append("(");for(var o=new Snippet,s=0;s<i.length;s++)0!==s&&o.append(", "),o.appendSnippet(i[s]);return n.appendSnippet(o),n.append(")"),n},NODE.Closure=function(e,t){this.args=e,this.expr=t},NODE.Closure.prototype.toSnippet=function(e){for(var t=new Context(e),n=[],i=new Snippet,r=0;r<this.args.length;r++){var a=new TypeVariable;n.push(a),0!==r&&i.append(", "),t.setIdent(this.args[r].value,a),i.append(this.args[r])}i.exprType=new TypeOperator("calltuple",n);var p=this.expr.toSnippet(t),l=new TypeOperator("->",[i.exprType,p.exprType]),o=new Snippet(l);return o.append("function("),o.appendSnippet(i),o.append("){"),o.appendSnippet(p),o.append("}"),o},NODE.Let=function(e){this.children=e},NODE.Let.prototype.toSnippet=function(e){var t=this.children[2].toType(e),n=this.children[1].constructor===NODE.DesSingle,i=null!==this.children[3],r=i&&!n?newvar():null,a=this.children[1].destructure(e)(n?i?this.children[3][1]:null:r);try{unify(a[1],t)}catch(p){throw new LocatedError("Type checking failed: (lhs) "+p,this.children[3][0])}var l=new Snippet(e.getType(TypeKeys.UNIT));if((n||i)&&(l.append("var",this.children[0]),l.append(" ")),n?(l.append(this.children[1].node.v),e.setIdent(this.children[1].node.v.value,t)):i&&l.append(r),i){l.append(" "),l.append(this.children[3][0]),l.append(" ");var o=this.children[3][1].toSnippet(e);try{unify(o.exprType,t)}catch(p){throw new LocatedError("Type checking failed: (rhs) "+p,this.children[3][0])}l.appendSnippet(o)}if((n||i)&&l.append(this.children[4]),!n)for(var s=0;s<a[2].length;s++)l.isEmpty()||l.append("\n"),l.append("var "),l.append(a[2][s][0]),null!==a[2][s][2]&&l.append(" = "+a[2][s][2]),l.append(";"),e.setIdent(a[2][s][0],a[2][s][1]);return l},NODE.LastExpr=function(e){this.node=e},NODE.LastExpr.prototype.toSnippet=function(e){var t=this.node.toSnippet(e),n=new Snippet(t.exprType);return n.tail=t,n},NODE.LastStmt=function(e){this.node=e},NODE.LastStmt.prototype.toSnippet=function(e){var t=this.node.toSnippet(e);return t.append(";"),t},NODE.Break=function(e){this.children=e},NODE.Break.prototype.toSnippet=function(){var e=new Snippet;return e.exprType=null,e.append(this.children[0]),e},NODE.Continue=function(e){this.children=e},NODE.Continue.prototype.toSnippet=function(){var e=new Snippet;return e.exprType=null,e.append(this.children[0]),null!==this.children[1]&&(e.append(" "),e.append(this.children[1])),e},NODE.Return=function(e){this.children=e},NODE.Return.prototype.toSnippet=function(e){var t=new Snippet;if(t.exprType=null,t.append(this.children[0]),null!==this.children[1]){var n=this.children[1].toSnippet(e);try{unify(e.returnType,n.exprType)}catch(i){throw new LocatedError("Type checking failed: (return type) "+i,this.children[0])}t.append(" "),t.appendSnippet(n)}else try{unify(e.returnType,e.getType(TypeKeys.UNIT))}catch(i){throw new LocatedError("Type checking failed: (return type) "+i,this.children[0])}return t},NODE.IfExpr=function(e){this.node=e},NODE.IfExpr.prototype.toSnippet=function(e){if(this.node.constructor===NODE.If&&2===this.node.children.length&&1===this.node.children[0][3][1].items.length&&this.node.children[0][3][1].items[0].constructor===NODE.LastExpr&&null===this.node.children[1][1]&&1===this.node.children[1][3][1].items.length&&this.node.children[1][3][1].items[0].constructor===NODE.LastExpr){var t=this.node.children[0][1].toSnippet(e);try{unify(t.exprType,e.getType(TypeKeys.BOOL))}catch(n){throw new LocatedError("Type checking failed: (condition) "+n,t.getLastVerbatim())}for(var i=null,r=this.node.children[0][3][1].items[0].node.toSnippet(e),a=this.node.children[1][3][1].items[0].node.toSnippet(e),p=[r,a],l=0;l<p.length;l++){var o=p[l];if(null===i)i=o.exprType;else try{unify(o.exprType,i)}catch(n){throw new LocatedError("Type checking failed: (block expression mismatch) "+n,o.getLastVerbatim())}}var s=new Snippet(i);return s.append("("),s.appendSnippet(t),s.append(" ? "),s.appendSnippet(r),s.append(" : "),s.appendSnippet(a),s.append(")"),s}var u=this.node;u.constructor===NODE.BareBlock&&(u=u.block);var c=u.toSnippet(e),s=new Snippet(c.exprType);return s.append("(function(){"),s.append("\n"),c.indent(),s.appendSnippet(c),s.append("\n"),s.append("})()"),s},NODE.If=function(e){this.children=e},NODE.If.prototype.toSnippet=function(e){for(var t=null,n=[],i=[],r=!1,a=0;a<this.children.length;a++){var p;if(null!==this.children[a][1]){p=this.children[a][1],p.constructor!==Snippet&&(p=p.toSnippet(e));try{unify(p.exprType,e.getType(TypeKeys.BOOL))}catch(l){throw new LocatedError("Type checking failed: (condition) "+l,p.getLastVerbatim())}}else p=new Snippet;n.push(p);for(var o=this.children[a][3][0],s=new Snippet,u=0;u<o.length;u++)e.setIdent(o[u][0],o[u][1]),s.append("var"),s.append(" "),s.append(o[u][0]),null!==o[u][2]&&(s.append(" = "),s.append(o[u][2])),s.append(";"),u!==o.length-1&&s.append("\n");var c=this.children[a][3][1].toSnippet(e);if(o.length>0&&(c.content.length>0&&s.append("\n"),c.insertSnippetAt(0,s)),null!==c.exprType)if(null===t)t=c.exprType;else try{unify(c.exprType,t)}catch(l){throw new LocatedError("Type checking failed: (block expression mismatch) "+l,c.getLastVerbatim()||this.children[a][4])}r=r||null!==c.tail,i.push(c)}var h,f,d,m=new Snippet(t);m.tail=r?[]:null;for(var a=0;a<this.children.length;a++){var d=a===this.children.length-1;h=new Snippet,0!==a&&(h.append(this.children[a-1][4]),h.append(" "));for(var u=0;u<this.children[a][0].length;u++)0!==u&&h.append(" "),h.append(this.children[a][0][u]);n[a].isEmpty()||(h.append(" ("),h.appendSnippet(n[a]),h.append(")")),h.append(" "),h.append(this.children[a][2]),r?(m.tail.push(h),null===i[a].tail&&i[a].indent(),m.tail.push(i[a])):(m.appendSnippet(h),m.append("\n"),i[a].isEmpty()||(i[a].indent(),m.appendSnippet(i[a]),m.append("\n"))),d&&(f=new Snippet,f.append(this.children[a][4]),r?m.tail.push(f):m.appendSnippet(f))}return m},NODE.Match=function(e,t){this.e=e,this.children=t},NODE.Match.prototype.toSnippet=function(e){var t=newvar(),n=this.e.toSnippet(e),i=new Snippet;i.append("var"),i.append(" "),i.append(t),i.append(" = "),i.appendSnippet(n),i.append(";");for(var r=[],a=0;a<this.children.length;a++){var p,l=new Snippet(e.getType(TypeKeys.BOOL));if(this.children[a][0].constructor===Array){for(var o=this.children[a][0][0].toSnippet(e),s=null,u=0;u<this.children[a][0].length;u++){var o=this.children[a][0][u].toSnippet(e);if(0==u)s=o.exprType;else{try{unify(o.exprType,s)}catch(c){throw new LocatedError("Type checking failed: (match alternatives) "+c,o.getLastVerbatim())}l.append(" || ")}l.append(t),l.append(" === "),l.appendSnippet(o)}p=[[l.toString()],s,[]]}else{p=this.children[a][0].destructure(e)(t);for(var u=0;u<p[0].length;u++)0!==u&&l.append(" && "),l.append(p[0][0]);a===this.children.length-1&&0!==a||!l.isEmpty()||l.append("true")}try{unify(p[1],n.exprType)}catch(c){throw new LocatedError("Type checking failed: (match arm lhs) "+c,n.getLastVerbatim())}var h=0===a?"if":"else"+(l.isEmpty()?"":" if"),f=this.children[a][1];f=f.constructor===NODE.BareBlock?f.block:new NODE.Block([f]),r.push([[h],l,"{",[p[2],f],"}"])}var d=new NODE.If(r).toSnippet(e);return d.toString().length>0&&i.append("\n"),d.insertSnippetAt(0,i),d},NODE.While=function(e){this.children=e,this.label=null},NODE.While.prototype.toSnippet=function(e){var t=this.children[1];t.constructor!==Snippet&&(t=t.toSnippet(e));try{unify(t.exprType,e.getType(TypeKeys.BOOL))}catch(n){throw new LocatedError("Type checking failed: (condition) "+n,t.getLastVerbatim())}var i=this.children[3].toSnippet(e);if(null!==i.tail){var r=i.introduceVariable();i.content.length>0&&i.append("\n"),i.append("var "+r+";")}var a=new Snippet(e.getType(TypeKeys.UNIT));if(null!==this.label){for(var p=0;p<this.label.length;p++)a.append(this.label[p]);a.append(" ")}return a.append("while",this.children[0]),a.append(" ("),a.appendSnippet(t),a.append(") "),a.append(this.children[2]),a.append("\n"),i.isEmpty()||(i.indent(),a.appendSnippet(i),a.append("\n")),a.append(this.children[4]),a},NODE.Loop=function(e){this.children=e,this.label=null},NODE.Loop.prototype.toSnippet=function(e){var t=new Snippet(e.getType(TypeKeys.BOOL));t.append("true");var n=new NODE.While([this.children[0],t,this.children[1],this.children[2],this.children[3]]);return n.label=this.label,n.toSnippet(e)},NODE.For=function(e){this.children=e,this.label=null},NODE.For.prototype.toSnippet=function(e){function t(e){return new NODE.Verbatim(e)}var n=newvar(),i=new NODE.Let([t("let"),new NODE.DesSingle(null,new NODE.Ident(t(n))),new NODE.TypeMissing,[t("="),this.children[3]],t(";")]),r=i.toSnippet(e);r.append(" // it");var a=new NODE.Apply(null,new NODE.Property(t("."),new NODE.Ident(t(n)),new NODE.Ident(t("next"))),new NODE.CallTuple([]));if(null===e.getType("Option"))throw new LocatedError("`Option` not found in environment, `for` cannot be transpiled",this.children[0]);var p=[];p.push([new NODE.DesTupleStruct([this.children[1]],new NODE.Ident(t("Some"))),this.children[5]]),p.push([new NODE.DesSingle(null,new NODE.Ident(t("None"))),new NODE.LastStmt(new NODE.Break([t("break")]))]);var l=new Snippet(e.getType(TypeKeys.BOOL));l.append("true");var o=new NODE.Block([new NODE.Match(a,p)]),s=new NODE.While([this.children[0],l,this.children[4],o,this.children[6]]);s.label=this.label;var u=s.toSnippet(e);return u.toString().length>0&&r.append("\n"),u.insertSnippetAt(0,r),u},NODE.BareBlock=function(e){this.block=e,this.label=null},NODE.BareBlock.prototype.toSnippet=function(e){var t=this.block.toSnippet(e);if(null!==t.tail){var n=t.introduceVariable();t.content.length>0&&t.append("\n"),t.append("var "+n+";")}var i=new Snippet(e.getType(TypeKeys.UNIT));return i.appendSnippet(t),i},NODE.Fn=function(e){this.children=e},NODE.Fn.prototype.toSnippet=function(e,t){t=t||!1;var n=e.getIdent(this.children[0][1].value).getFresh(),i=n.types[1],r=e.getIdentChild(this.children[0][1].value);r.returnType=i,t&&delete e.identEnv[this.children[0][1].value];for(var a=[],p=new Snippet,l=0;l<this.children[0][4].length;l++){var o=this.children[0][4][l][0],s=o.constructor===NODE.DesSingle?null:newvar(),u=o.destructure(e)(s);try{unify(u[1],n.types[0].types[l])}catch(c){throw new LocatedError("Type checking failed: (fn args["+l+"]) "+c,this.children[0][1])}for(var h=0;h<u[2].length;h++)r.setIdent(u[2][h][0],u[2][h][1]),null!==s&&(0!==h&&p.append("\n"),p.append("var"),p.append(" "),p.append(u[2][h][0]),null!==u[2][h][2]&&(p.append(" = "),p.append(u[2][h][2])),p.append(";"));a.push(null===s?o.node.v.value:s)}var f=this.children[2].toSnippet(r);if(null!==f.exprType)try{unify(i,f.exprType)}catch(c){throw new LocatedError("Type checking failed: (fn return type) "+c,f.getLastVerbatim()||this.children[1])}p.isEmpty()||(f.content.length>0&&p.append("\n"),f.insertSnippetAt(0,p));var d=new Snippet(e.getType(TypeKeys.UNIT));d.append("function",this.children[0][0]),t||(d.append(" "),d.append(this.children[0][1])),d.append(this.children[0][3]);for(var l=0;l<a.length;l++)0!==l&&d.append(", "),d.append(a[l]);return d.append(this.children[0][5]),d.append(" "),d.append(this.children[1]),d.append("\n"),f.isEmpty()||(f.indent(),d.appendSnippet(f),d.append("\n")),d.append(this.children[3]),d},NODE.Sc=function(e){this.children=e},NODE.Sc.prototype.toSnippet=function(e){var t=this.children[1],n=e.getTypeChild(t.value),i=e.getType(t.value);n.returnType=n.getType(TypeKeys.UNIT);for(var r=0;r<this.children[2].length;r++){var a=this.children[2][r].value,p=new TypeVariable(a);i.generics.push(p),n.setType(a,p)}if(this.children[3].constructor!==NODE.Tuple&&0===this.children[3].length){var l=new Snippet(e.getType(TypeKeys.UNIT));return l.append("var"),l.append(" "),l.append(t),l.append(" = {};"),l}var o=newvar(),s=new Snippet;if(this.children[3].constructor===NODE.Tuple)for(var u=this.children[3].children,r=0;r<u.length;r++)i.properties[r]=u[r].toType(n),0!==r&&s.append("\n"),s.append("this["+r+"]"),s.append(" = "+o+"["+r+"];");else{for(var c=[],r=0;r<this.children[3].length;r++){var h=this.children[3][r][0];i.properties[h.value]=this.children[3][r][1].toType(n),c.push(h)}for(var r=0;r<c.length;r++)0!==r&&s.append("\n"),s.append("this."),s.append(c[r]),s.append(" = "+o+"['"+c[r].value+"'];")}var l=new Snippet(e.getType(TypeKeys.UNIT));return l.append("function "),l.append(t),l.append("("+o+") {"),l.append("\n"),s.isEmpty()||(s.indent(),l.appendSnippet(s),l.append("\n")),l.append("}"),l.append("\n"+t.value+".prototype.type = '"+t+"';"),l},NODE.Enum=function(e){this.children=e},NODE.Enum.prototype.toSnippet=function(e){for(var t=(e.getType(this.children[1].value),this.children[2].map(function(e){return e.value}),new Snippet(e.getType(TypeKeys.UNIT))),n=0;n<this.children[4].length;n++){var i=this.children[4][n];0!==n&&t.append("\n");var r=e.getType(i.children[1].value);e.setType(i.children[1].value,r.slot),t.appendSnippet(this.children[4][n].toSnippet(e)),e.setType(i.children[1].value,r)}return t},NODE.Attribute=function(e){this.children=e},NODE.Attribute.prototype.toSnippet=function(e){var t=new Snippet(e.getType(TypeKeys.UNIT));return t.append("// "),t.append("attribute(s) erased",[this.children[1],this.children[4]]),t},NODE.Trait=function(e){this.children=e},NODE.Trait.prototype.toSnippet=function(e){var t=new Snippet(e.getType(TypeKeys.UNIT));return t.append("var"),t.append(" "),t.append(this.children[1]),t.append(" = "),t.append(this.children[2]),t.append(this.children[4]),t.append("; // "),t.append(this.children[0]),t.append(" erased"),t},NODE.Impl=function(e){this.children=e},NODE.Impl.prototype.toSnippet=function(e){var t=(this.children[1].toSnippet(e),this.children[3].toSnippet(e)),n=prune(t.exprType);n.constructor===TypeOperator&&null!==n.instance&&(n=n.instance),e=new Context(e),e.setIdent("self",n);for(var i,r,a=0;a<this.children[5].length;a++){r=this.children[5][a],i=e.newIdentChild(r.children[0][1].value);for(var p=new TypeOperator("->"),l=0;l<r.children[0][2].length;l++){var o=r.children[0][2][l].value,s=new TypeVariable(o);p.generics.push(s),i.setType(o,s)}for(var u=[],l=0;l<r.children[0][4].length;l++)u.push(r.children[0][4][l][1].toType(i));p.types.push(new TypeOperator("calltuple",u)),p.types.push(r.children[0][6].toType(i)),e.setIdent(r.children[0][1].value,p),e.getIdent("self").properties[r.children[0][1].value]=p}for(var c=new Snippet(e.getType(TypeKeys.UNIT)),a=0;a<this.children[5].length;a++)r=this.children[5][a],0!==a&&c.append("\n"),c.append(t.toString()),c.append(".prototype."),c.append(r.children[0][1]),c.append(" = "),c.appendSnippet(r.toSnippet(e,!0)),c.append(";");return c},NODE.Mod=function(e){this.children=e},NODE.Mod.prototype.toSnippet=function(e){var t=e.newModChild(this.children[1].value);e.setMod(this.children[1].value,e.getType(TypeKeys.UNIT));var n=new NODE.BareBlock(this.children[3]).toSnippet(t),i=new Snippet;i.append("return {"),i.append("\n");var r=[];for(var a in t.modChildrenEnv)r.push(a);for(var a in t.typeChildrenEnv)r.push(a);for(var a in t.identChildrenEnv)r.push(a);for(var p=new Snippet,l=0;l<r.length;l++)0!==l&&p.append(",\n"),p.append(r[l]+": "+r[l]);p.isEmpty()||(p.indent(),i.appendSnippet(p),i.append("\n")),i.append("};");var o=new Snippet(e.getType(TypeKeys.UNIT));return o.append("var",this.children[0]),o.append(" "),o.append(this.children[1]),o.append(" = "),o.append("(function(){",this.children[2]),o.append("\n"),n.isEmpty()||(n.indent(),o.appendSnippet(n),o.append("\n")),i.indent(),o.appendSnippet(i),o.append("\n"),o.append("})();",this.children[4]),o},NODE.Block=function(e){this.items=e||[]},NODE.Block.prototype.unshift=function(e){this.items.unshift(e)},NODE.Block.prototype.toSnippet=function(e){function t(e){if(e.constructor===NODE.Attribute)return 0;var t=[NODE.Mod,NODE.Fn,NODE.Sc,NODE.Enum,NODE.Trait,NODE.Impl,NODE.If,NODE.Match,NODE.While,NODE.Loop];return-1!==t.indexOf(e.constructor)?1:2}for(var n,i,r,a=new Snippet(e.getType(TypeKeys.UNIT));this.items.length>0&&this.items[0].constructor===NODE.Use;)n=this.items.shift(),a.appendSnippet(n.toSnippet(e)),a.append("\n");a.isEmpty()||a.append("\n");for(var p=0;p<this.items.length;p++)if(n=this.items[p],n.constructor===NODE.Trait){r=e.newTypeChild(n.children[1].value);var l=new TypeOperator(n.children[1].value);e.setType(n.children[1].value,l)}for(var p=0;p<this.items.length;p++)if(n=this.items[p],n.constructor===NODE.Sc){r=e.newTypeChild(n.children[1].value);var l=new TypeOperator(n.children[1].value);e.setType(n.children[1].value,l)}for(var p=0;p<this.items.length;p++)if(n=this.items[p],n.constructor===NODE.Enum){var l=new TypeOperator(n.children[1].value);l.slot=new TypeVariable("E");for(var o=0;o<n.children[2].length;o++){var s=n.children[2][o].value,u=new TypeVariable(s);l.generics.push(u)}for(var o=0;o<n.children[4].length;o++){var c=n.children[4][o];r=e.newTypeChild(c.children[1].value);for(var h=0;h<l.generics.length;h++)r.setType(l.generics[h].name,l.generics[h]);var u=new TypeOperator(c.children[1].value),f=cloneArray(l.generics);f.push(l.slot);var d=cloneArray(l.generics);d.push(u),e.setType(c.children[1].value,l.getFresh(f,d))}e.setType(n.children[1].value,l)}for(var p=0;p<this.items.length;p++)if(n=this.items[p],n.constructor===NODE.Fn){r=e.newIdentChild(n.children[0][1].value);for(var l=new TypeOperator("->"),o=0;o<n.children[0][2].length;o++){var s=n.children[0][2][o].value,u=new TypeVariable(s);l.generics.push(u),r.setType(s,u)}for(var m=[],o=0;o<n.children[0][4].length;o++)m.push(n.children[0][4][o][1].toType(r));l.types.push(new TypeOperator("calltuple",m)),l.types.push(n.children[0][6].toType(r)),e.setIdent(n.children[0][1].value,l)}for(var E,T=-1,p=0;p<this.items.length;p++){n=this.items[p],i=p===this.items.length-1,E=t(n),(1===T||2===T&&2!==E)&&a.append("\n"),T=E;var y=n.constructor===NODE.Verbatim&&";"===n.value,v=n.toSnippet(e);if(null!==a.exprType&&(a.exprType=v.exprType),i&&null!==v.tail)a.tail=v;else{var $=v.introduceVariable();0===p||v.isEmpty()||y||a.append("\n"),null!==$&&a.append("var "+$+";\n"),a.appendSnippet(v)}}return a},NODE.Use=function(e){this.children=e},NODE.Use.prototype.toSnippet=function(e){function t(t,n){var i=t.join("/")+".rs",r=t[t.length-1];if(!n&&FS.exists(i))return importedCtx=applyPropertyChain(ENV,t),null===importedCtx&&(transpile(i),importedCtx=applyPropertyChain(ENV,t)),e.setMod(r,e.getType(TypeKeys.UNIT)),e.modChildrenEnv[r]=importedCtx,{isSelective:!1};if(1===t.length)throw"file not found '"+i+"'";if(r=t.pop(),i=t.join("/")+".rs",!FS.exists(i))throw"file not found '"+i+"'";if(importedCtx=applyPropertyChain(ENV,t),null===importedCtx&&(transpile(i),importedCtx=applyPropertyChain(ENV,t)),null!==importedCtx.getIdent(r))e.setIdent(r,importedCtx.getIdent(r)),importedCtx.identChildrenEnv.hasOwnProperty(r)&&(e.identChildrenEnv[r]=importedCtx.identChildrenEnv[r]);else if(null!==importedCtx.getType(r))e.setType(r,importedCtx.getType(r)),importedCtx.typeChildrenEnv.hasOwnProperty(r)&&(e.typeChildrenEnv[r]=importedCtx.typeChildrenEnv[r]);else{if(null===importedCtx.getMod(r))throw"import failed to find "+r+" in '"+i+"'";e.setMod(r,e.getType(TypeKeys.UNIT)),importedCtx.modChildrenEnv.hasOwnProperty(r)&&(e.modChildrenEnv[r]=importedCtx.modChildrenEnv[r])}return{isSelective:!0}}var n=this.children[1][this.children[1].length-1],i=this.children[1].map(function(e){return e.constructor===NODE.Verbatim?e.value:e}),r=new Snippet(e.getType(TypeKeys.UNIT));if(i[i.length-1].constructor===Array){var a=i.pop().map(function(e){return e.value}),p=newvar();r.append("var "),r.append(p),r.append(" = "),r.append("require",this.children[0]),r.append('("./');for(var l=0;l<this.children[1].length-1;l++)0!==l&&r.append("/"),r.append(this.children[1][l]);r.append('")'),r.append(this.children[2]);for(var l=0;l<a.length;l++){var o=cloneArray(i);o.push(a[l]);try{t(o,!0)}catch(s){if(s&&s.constructor===LocatedError)throw s;throw new LocatedError(s,this.children[0])}r.append("\nvar "),r.append(a[l]),r.append(" = "+p+"."),r.append(n[l]),r.append(";")}}else{var u;try{u=t(i,!1)}catch(s){if(s&&s.constructor===LocatedError)throw s;throw new LocatedError(s,this.children[0])}if(u.isSelective){r.append("var "),r.append(n.value),r.append(" = "),r.append("require",this.children[0]),r.append('("./');for(var l=0;l<this.children[1].length-1;l++)0!==l&&r.append("/"),r.append(this.children[1][l]);r.append('")'),r.append("."),r.append(n),r.append(this.children[2])}else{r.append("var "),r.append(n.value),r.append(" = "),r.append("require",this.children[0]),r.append('("./');for(var l=0;l<this.children[1].length;l++)0!==l&&r.append("/"),r.append(this.children[1][l]);r.append('")'),r.append(this.children[2])}}return r},NODE.TypeMissing=function(){},NODE.TypeMissing.prototype.toType=function(){return new TypeVariable},NODE.TypeDiverging=function(){},NODE.TypeDiverging.prototype.toType=function(){return null},NODE.TypeIdent=function(e,t){this.node=e,this.generics=t||[]},NODE.TypeIdent.prototype.toType=function(e){var t=this.node.toSnippet(e),n=t.exprType;if(0===this.generics.length)return n;if(n.constructor!==TypeOperator)throw"type '"+t.toString()+"' not known";if(this.generics.length>n.generics.length)throw"too many generic parameters for '"+t.toString()+"'";for(var i=[],r=0;r<this.generics.length;r++)i.push(this.generics[r].toType(e));for(var a=[],p=[],l=0,r=0;r<n.generics.length;r++)null!==n.generics[r].name&&(l<i.length&&(a.push(n.generics[r]),p.push(i[l])),l++);return n.getFresh(a,p)},NODE.TypeTuple=function(e){this.args=e},NODE.TypeTuple.prototype.toType=function(e){for(var t=[],n=0;n<this.args.length;n++)t.push(this.args[n].toType(e));return new TypeOperator("tuple",t)},NODE.TypeArray=function(e){this.node=e},NODE.TypeArray.prototype.toType=function(e){var t=new TypeOperator("[]"),n=new TypeVariable("T");return t.generics.push(n),t.getFresh([n],[this.node.toType(e)])},NODE.TypeClosure=function(e,t){this.fnArgs=e,this.retType=t},NODE.TypeClosure.prototype.toType=function(e){for(var t=new TypeOperator("calltuple",[]),n=0;n<this.fnArgs.length;n++)t.types.push(this.fnArgs[n][1].toType(e));var i=this.retType.toType(e);return new TypeOperator("->",[t,i])},NODE.DesIgnore=function(e){this.v=e},NODE.DesIgnore.prototype.toSnippet=function(){throw new LocatedError("destructure node, not a concrete node (use `destructure` instead)",this.v)},NODE.DesIgnore.prototype.destructure=function(){return function(){return[[],new TypeVariable,[]]}},NODE.DesSingle=function(e,t){this.v=null,this.node=t},NODE.DesSingle.prototype.toSnippet=function(){throw"destructure node, not a concrete node (use `destructure` instead)"},NODE.DesSingle.prototype.destructure=function(e){var t=this.node.v;if(null!==e.getType(t.value)){var n=e.getType(t.value).getFresh();return function(e){var i=[];return null!==e&&i.push(e+" === "+t.value),[i,n,[]]}}var i=new TypeVariable;return function(e){return[[],i,[[t,i,e]]]}},NODE.DesTuple=function(e){this.children=e},NODE.DesTuple.prototype.toSnippet=function(){throw"destructure node, not a concrete node (use `destructure` instead)"},NODE.DesTuple.prototype.destructure=function(e){var t=this.children;return function(n){for(var i=[],r=[],a=0;a<t.length;a++)if(r.push(new TypeVariable),t[a].constructor!==NODE.DesIgnore){var p=null;null!==n&&(p=n+"["+a+"]");var l=t[a].destructure(e)(p);try{unify(l[1],r[a])}catch(o){throw new LocatedError("Type checking failed: (tuple field # "+a+") "+o)}i=i.concat(l[2])}return[[],new TypeOperator("tuple",r),i]}},NODE.DesStruct=function(e,t){this.name=t,this.values=e},NODE.DesStruct.prototype.toSnippet=function(){throw"destructure node, not a concrete node (use `destructure` instead)"},NODE.DesStruct.prototype.destructure=function(e){var t=this.name.v,n=this.values,i=this.name.toSnippet(e).exprType;return function(r){for(var a=[],p=0;p<n.length;p++)if(n[p][1].constructor!==NODE.DesIgnore){var l=null;null!==r&&(l=r+"['"+n[p][0].value+"']");var o=n[p][1].destructure(e)(l);try{unify(o[1],pruneToProperty(i).properties[n[p][0].value])}catch(s){throw new LocatedError("Type checking failed: (struct field) "+s,n[p][0])}a=a.concat(o[2])}var u=[];return null!==r&&u.push(r+".type === '"+t.value+"'"),[u,i,a]
}},NODE.DesTupleStruct=function(e,t){this.name=t,this.values=e},NODE.DesTupleStruct.prototype.toSnippet=function(){throw"destructure node, not a concrete node (use `destructure` instead)"},NODE.DesTupleStruct.prototype.destructure=function(e){var t=this.name.v,n=this.values,i=this.name.toSnippet(e).exprType;return function(r){for(var a=[],p=0;p<n.length;p++)if(n[p].constructor!==NODE.DesIgnore){var l=null;null!==r&&(l=r+"["+p+"]");var o=n[p].destructure(e)(l);try{unify(o[1],pruneToProperty(i).properties[p])}catch(s){throw new LocatedError("Type checking failed: (tuple struct field # "+p+") "+s)}a=a.concat(o[2])}var u=[];return null!==r&&u.push(r+".type === '"+t.value+"'"),[u,i,a]}},Snippet.prototype.introduceVariable=function(){return this.iv=null===this.tail?null:newvar(),this.iv},Snippet.prototype.toString=function(){return null!==this.tail&&this.consumeTail(),this.content},Snippet.prototype.isEmpty=function(){return 0===this.content.length&&null===this.tail},Snippet.prototype.f=function(e){this.isSorted||(this.verbatims.sort(function(e,t){return e.lo-t.lo}),this.isSorted=!0);for(var t=this.verbatims.length,n=0;t>n;n++){if(this.verbatims[n].lo<=e&&this.verbatims[n].hi>e)return{lo:this.verbatims[n].jsLo,hi:this.verbatims[n].jsHi};if(this.verbatims[n].lo>e)return{lo:this.verbatims[n].jsLo,hi:this.verbatims[n].jsLo}}return 0===t?{lo:0,hi:0}:{lo:this.verbatims[t-1].jsHi,hi:this.verbatims[t-1].jsHi}},Snippet.prototype.addNode=function(e,t,n){if(-1!==this.verbatims.indexOf(e))throw"node was present in snippet verbatims, f(x) maps to two values and is no longer a function";void 0!==e.lo&&void 0!==e.hi&&(e.jsLo=t,e.jsHi=n,this.verbatims.push(e))},Snippet.prototype.updateVerbatims=function(e,t){for(var n=0;n<this.verbatims.length;n++)this.verbatims[n].jsHi<=e||(e<=this.verbatims[n].jsLo?(this.verbatims[n].jsLo+=t,this.verbatims[n].jsHi+=t):this.verbatims[n].jsHi+=s.len)},Snippet.prototype.append=function(e,t){if(1===arguments.length&&e.constructor===NODE.Verbatim&&(t=[e],e=e.value),"string"!=typeof e)throw"append on non-string not supported";var n=this.content.length;this.content+="string"==typeof e?e:e.content;var i=this.content.length;if("string"!=typeof e)for(var r=0;r<e.verbatims.length;r++)this.addNode(e.verbatims[r],e.verbatims[r].jsLo+n,e.verbatims[r].jsHi+n);if("undefined"!=typeof t&&null!==t){t.constructor!==Array&&(t=[t]);for(var r=0;r<t.length;r++)this.addNode(t[r],n,i)}},Snippet.prototype.insertAt=function(e,t,n){if(2===arguments.length&&t.constructor===NODE.Verbatim&&(n=[t],t=t.value),"string"!=typeof t)throw"insertAt on non-string not supported";var i=this.content.substring(0,e),r=this.content.substring(e),a=i.length,p="string"==typeof t?t.length:t.content.length,l=a+p;if(this.content=i+("string"==typeof t?t:t.content)+r,this.updateVerbatims(e,p),"string"!=typeof t)for(var e=0;e<t.verbatims.length;e++)this.addNode(t.verbatims[e],t.verbatims[e].jsLo+a,t.verbatims[e].jsHi+a);if("undefined"!=typeof n&&null!==n){n.constructor!==Array&&(n=[n]);for(var e=0;e<n.length;e++)this.addNode(n[e],a,l)}},Snippet.prototype.appendSnippet=function(e){null!==e.tail&&e.consumeTail();var t=this.content.length;this.content+=e.content;for(var n=(this.content.length,0);n<e.verbatims.length;n++)this.addNode(e.verbatims[n],e.verbatims[n].jsLo+t,e.verbatims[n].jsHi+t)},Snippet.prototype.insertSnippetAt=function(e,t){null!==t.tail&&t.consumeTail();var n=this.content.substring(0,e),i=this.content.substring(e),r=n.length,a=t.content.length;this.content=n+t.content+i,this.updateVerbatims(e,a);for(var e=0;e<t.verbatims.length;e++)this.addNode(t.verbatims[e],t.verbatims[e].jsLo+r,t.verbatims[e].jsHi+r)},Snippet.prototype.indent=function(){null!==this.tail&&this.consumeTail();for(var e="    ",t=-1;t<this.content.length;)-1===t||10===this.content.charCodeAt(t)?(t++,this.insertAt(t,e),t+=e.length):t++},Snippet.prototype.getLastVerbatim=function(){return 0===this.verbatims.length?null:this.verbatims[this.verbatims.length-1]},Snippet.prototype.consumeTail=function(){if(null!==this.tail){if(this.tail.constructor===Snippet){if(null===this.tail.tail){var e=null===this.iv?"return ":this.iv+" = ";this.tail.insertAt(0,e),this.tail.append(";")}else this.tail.iv=this.iv;this.content.length>0&&this.append("\n"),this.appendSnippet(this.tail)}else for(var t=0;t<this.tail.length;t++)this.content.length>0&&this.append("\n"),null===this.tail[t].tail?this.appendSnippet(this.tail[t]):(this.tail[t].iv=this.iv,this.tail[t].indent(),this.appendSnippet(this.tail[t]));this.iv=null,this.tail=null}};var TABLE={S:{";":[1],"if":[1],"{":[1],"}":[],"else":[],"while":[1],match:[1],"=>":[],",":[],"|":[1],"#":[1],"[":[1],"]":[],ident:[1],"=":[],"(":[1],")":[],pub:[1],priv:[1],fn:[1],"->":[],"!":[1],"<":[],">":[],lifetime:[1],":":[],self:[1],"||":[1],"::":[],let:[1],mut:[],"&":[1],"*":[1],"~":[1],"@":[1],loop:[1],unsafe:[1],"for":[1],"in":[],"true":[1],"false":[1],litchar:[1],litfloat:[1],litint:[1],litstr:[1],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[1],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[1],"break":[1],"continue":[1],struct:[1],impl:[1],trait:[1],use:[1],mod:[1],"enum":[1],_:[],$:[1]},B:{";":[3],"if":[6],"{":[6],"}":[2],"else":[],"while":[6],match:[6],"=>":[],",":[],"|":[5],"#":[8],"[":[5],"]":[],ident:[5],"=":[],"(":[5],")":[],pub:[7],priv:[7],fn:[7],"->":[],"!":[5],"<":[],">":[],lifetime:[6],":":[],self:[5],"||":[5],"::":[],let:[4],mut:[],"&":[5],"*":[5],"~":[5],"@":[5],loop:[6],unsafe:[6],"for":[6],"in":[],"true":[5],"false":[5],litchar:[5],litfloat:[5],litint:[5],litstr:[5],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[5],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[5],"break":[5],"continue":[5],struct:[7],impl:[7],trait:[7],use:[7],mod:[7],"enum":[7],_:[],$:[2]},TB:{";":[10],"if":[],"{":[],"}":[9],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[9]},IF:{";":[],"if":[11],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TIF:{";":[12],"if":[12],"{":[12],"}":[12],"else":[13],"while":[12],match:[12],"=>":[],",":[12],"|":[12],"#":[12],"[":[12],"]":[12],ident:[12],"=":[],"(":[12],")":[12],pub:[12],priv:[12],fn:[12],"->":[],"!":[12],"<":[12],">":[12],lifetime:[12],":":[],self:[12],"||":[12],"::":[],let:[12],mut:[],"&":[12],"*":[12],"~":[12],"@":[12],loop:[12],unsafe:[12],"for":[12],"in":[],"true":[12],"false":[12],litchar:[12],litfloat:[12],litint:[12],litstr:[12],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[12],"-":[12],"&&":[12],".":[12],"/":[12],"%":[12],"^":[12],"<<":[12],">>":[12],"<=":[12],"==":[12],"!=":[12],">=":[12],as:[12],"return":[12],"break":[12],"continue":[12],struct:[12],impl:[12],trait:[12],use:[12],mod:[12],"enum":[12],_:[12],$:[12]},TEL:{";":[],"if":[15],"{":[14],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},WH:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[16],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},MT:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[17],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},MA:{";":[],"if":[],"{":[],"}":[18],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[19],"=":[],"(":[19],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[19],"false":[19],litchar:[19],litfloat:[19],litint:[19],litstr:[19],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[19],$:[]},MB:{";":[],"if":[21],"{":[21],"}":[],"else":[],"while":[21],match:[21],"=>":[],",":[],"|":[20],"#":[],"[":[20],"]":[],ident:[20],"=":[],"(":[20],")":[],pub:[],priv:[],fn:[],"->":[],"!":[20],"<":[],">":[],lifetime:[21],":":[],self:[20],"||":[20],"::":[],let:[],mut:[],"&":[20],"*":[20],"~":[20],"@":[20],loop:[21],unsafe:[21],"for":[21],"in":[],"true":[20],"false":[20],litchar:[20],litfloat:[20],litint:[20],litstr:[20],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[20],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[20],"break":[20],"continue":[20],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TMB1:{";":[],"if":[],"{":[],"}":[22],"else":[],"while":[],match:[],"=>":[],",":[23],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TMB2:{";":[],"if":[],"{":[],"}":[24],"else":[],"while":[],match:[],"=>":[],",":[25],"|":[],"#":[],"[":[],"]":[],ident:[24],"=":[],"(":[24],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[24],"false":[24],litchar:[24],litfloat:[24],litint:[24],litstr:[24],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[24],$:[]},MP:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[27],"=":[],"(":[27],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[26],"false":[26],litchar:[26],litfloat:[26],litint:[26],litstr:[26],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[27],$:[]},LLIT:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[28],",":[],"|":[29],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},AT:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[30],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},LAI:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[32],"|":[],"#":[],"[":[],"]":[31],ident:[],"=":[],"(":[],")":[31],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},AI:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[33],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TAI:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[34],"|":[],"#":[],"[":[],"]":[34],ident:[],"=":[35],"(":[36],")":[34],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},VIS:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[38],priv:[39],fn:[37],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[37],impl:[37],trait:[37],use:[37],mod:[37],"enum":[37],_:[],$:[]},TVIS:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[40],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[41],impl:[43],trait:[42],use:[44],mod:[45],"enum":[46],_:[],$:[]},HFN:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[47],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},FN:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[48],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},FS:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[49],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},RT:{";":[50],"if":[],"{":[50],"}":[50],"else":[],"while":[],match:[],"=>":[],",":[50],"|":[50],"#":[],"[":[],"]":[50],ident:[],"=":[50],"(":[],")":[50],pub:[],priv:[],fn:[],"->":[51],"!":[],"<":[],">":[50],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[50]},TRT:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[53],"#":[],"[":[53],"]":[],ident:[53],"=":[],"(":[53],")":[],pub:[],priv:[],fn:[],"->":[],"!":[52],"<":[],">":[],lifetime:[],":":[],self:[],"||":[53],"::":[],let:[],mut:[53],"&":[53],"*":[53],"~":[53],"@":[53],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},GE:{";":[54],"if":[],"{":[54],"}":[54],"else":[],"while":[],match:[],"=>":[],",":[54],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[54],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[55],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},LLG:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[57],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[56],lifetime:[57],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TLLG:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[59],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[58],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},LG:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[60],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[61],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},LFA:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[62],"#":[],"[":[],"]":[],ident:[63],"=":[],"(":[63],")":[62],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[63],"||":[],"::":[],let:[],mut:[63],"&":[63],"*":[63],"~":[63],"@":[63],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[63],$:[]},TLFA:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[65],"|":[64],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[64],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},VD:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[66],"=":[],"(":[66],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[66],"||":[],"::":[],let:[],mut:[66],"&":[66],"*":[66],"~":[66],"@":[66],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[66],$:[]},TVD:{";":[67],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[67],"|":[67],"#":[],"[":[],"]":[],ident:[],"=":[67],"(":[],")":[67],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[67],lifetime:[],":":[68],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},DES_OR_SELF:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[69],"=":[],"(":[69],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[70],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[69],$:[]},TY:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[72],"#":[],"[":[71],"]":[],ident:[71],"=":[],"(":[71],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[73],"::":[],let:[],mut:[71],"&":[71],"*":[71],"~":[71],"@":[71],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TY1:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[75],"]":[],ident:[74],"=":[],"(":[76],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TY2:{";":[77],"if":[],"{":[77],"}":[77],"else":[],"while":[],match:[],"=>":[],",":[77],"|":[77],"#":[],"[":[],"]":[77],ident:[],"=":[77],"(":[],")":[77],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[78],">":[77],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[77]},TTY:{";":[79],"if":[],"{":[79],"}":[79],"else":[],"while":[],match:[],"=>":[],",":[79],"|":[79],"#":[],"[":[],"]":[79],ident:[],"=":[79],"(":[],")":[79],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[79],">":[79],lifetime:[],":":[],self:[],"||":[],"::":[80],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[79]},LTY:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[82],"#":[],"[":[82],"]":[],ident:[82],"=":[],"(":[82],")":[81],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[81],lifetime:[],":":[],self:[],"||":[82],"::":[],let:[],mut:[82],"&":[82],"*":[82],"~":[82],"@":[82],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TLTY:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[84],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[83],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[83],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},L:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[85],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TL:{";":[86],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[87],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},LP:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[88],"=":[],"(":[88],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[88],"&":[88],"*":[88],"~":[88],"@":[88],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[88],$:[]},M:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[89],"]":[],ident:[89],"=":[],"(":[89],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[89],"||":[],"::":[],let:[],mut:[90],"&":[91],"*":[92],"~":[93],"@":[94],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[89],$:[]},TM:{";":[],"if":[95],"{":[],"}":[],"else":[],"while":[],match:[95],"=>":[],",":[],"|":[],"#":[],"[":[95],"]":[],ident:[95],"=":[],"(":[95],")":[],pub:[],priv:[],fn:[],"->":[],"!":[95],"<":[],">":[],lifetime:[],":":[],self:[95],"||":[],"::":[],let:[],mut:[96],"&":[95],"*":[95],"~":[95],"@":[95],loop:[],unsafe:[],"for":[],"in":[],"true":[95],"false":[95],litchar:[95],litfloat:[95],litint:[95],litstr:[95],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[95],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[95],$:[]},P1:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[97],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[98],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},P2:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[101],"]":[],ident:[],"=":[],"(":[100],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[99],"false":[99],litchar:[99],litfloat:[99],litint:[99],litstr:[99],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},P3:{";":[],"if":[102],"{":[],"}":[],"else":[],"while":[],match:[103],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},P4:{";":[],"if":[],"{":[107],"}":[],"else":[],"while":[104],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[105],unsafe:[106],"for":[108],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},P5:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[109],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[110],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},LIT:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[111],"false":[112],litchar:[113],litfloat:[114],litint:[115],litstr:[116],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},E1:{";":[117],"if":[],"{":[117],"}":[117],"else":[],"while":[],match:[],"=>":[],",":[117],"|":[131],"#":[],"[":[],"]":[117],ident:[],"=":[120],"(":[118],")":[117],pub:[],priv:[],fn:[],"->":[],"!":[119],"<":[131],">":[131],lifetime:[],":":[],self:[],"||":[131],"::":[],let:[],mut:[],"&":[131],"*":[131],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[121],"-=":[122],"*=":[123],"/=":[124],"%=":[125],"^=":[126],"&=":[127],"|=":[128],"<<=":[129],">>=":[130],"+":[131],"-":[131],"&&":[131],".":[131],"/":[131],"%":[131],"^":[131],"<<":[131],">>":[131],"<=":[131],"==":[131],"!=":[131],">=":[131],as:[131],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[117]},E2:{";":[132],"if":[],"{":[132],"}":[132],"else":[],"while":[],match:[],"=>":[],",":[132],"|":[133],"#":[],"[":[],"]":[132],ident:[],"=":[],"(":[],")":[132],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[133],">":[133],lifetime:[],":":[],self:[],"||":[133],"::":[],let:[],mut:[],"&":[133],"*":[133],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[133],"-":[133],"&&":[133],".":[133],"/":[133],"%":[133],"^":[133],"<<":[133],">>":[133],"<=":[133],"==":[133],"!=":[133],">=":[133],as:[133],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[132]},E3:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[143],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[146],">":[151],lifetime:[],":":[],self:[],"||":[152],"::":[],let:[],mut:[],"&":[139],"*":[138],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[134],"-":[135],"&&":[136],".":[137],"/":[140],"%":[141],"^":[142],"<<":[144],">>":[145],"<=":[147],"==":[148],"!=":[149],">=":[150],as:[153],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},E4:{";":[155],"if":[],"{":[154],"}":[155],"else":[],"while":[],match:[],"=>":[],",":[155],"|":[155],"#":[],"[":[],"]":[155],ident:[],"=":[155],"(":[155],")":[155],pub:[],priv:[],fn:[],"->":[],"!":[155],"<":[155],">":[155],lifetime:[],":":[],self:[],"||":[155],"::":[],let:[],mut:[],"&":[155],"*":[155],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[155],"-=":[155],"*=":[155],"/=":[155],"%=":[155],"^=":[155],"&=":[155],"|=":[155],"<<=":[155],">>=":[155],"+":[155],"-":[155],"&&":[155],".":[155],"/":[155],"%":[155],"^":[155],"<<":[155],">>":[155],"<=":[155],"==":[155],"!=":[155],">=":[155],as:[155],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[155]},TE1:{";":[156],"if":[],"{":[156],"}":[156],"else":[],"while":[],match:[],"=>":[],",":[156],"|":[156],"#":[],"[":[],"]":[156],ident:[],"=":[],"(":[157],")":[156],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[156],">":[156],lifetime:[],":":[],self:[],"||":[156],"::":[],let:[],mut:[],"&":[156],"*":[156],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[156],"-":[156],"&&":[156],".":[156],"/":[156],"%":[156],"^":[156],"<<":[156],">>":[156],"<=":[156],"==":[156],"!=":[156],">=":[156],as:[156],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[156]},U:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[159],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[160],"*":[161],"~":[162],"@":[163],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[158],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},W1:{";":[],"if":[167],"{":[],"}":[],"else":[],"while":[],match:[167],"=>":[],",":[],"|":[],"#":[],"[":[166],"]":[],ident:[165],"=":[],"(":[166],")":[],pub:[],priv:[],fn:[],"->":[],"!":[164],"<":[],">":[],lifetime:[],":":[],self:[165],"||":[],"::":[],let:[],mut:[],"&":[164],"*":[164],"~":[164],"@":[164],loop:[],unsafe:[],"for":[],"in":[],"true":[166],"false":[166],litchar:[166],litfloat:[166],litint:[166],litstr:[166],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[164],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},W2:{";":[],"if":[171],"{":[],"}":[],"else":[],"while":[],match:[171],"=>":[],",":[],"|":[],"#":[],"[":[170],"]":[],ident:[169],"=":[],"(":[170],")":[],pub:[],priv:[],fn:[],"->":[],"!":[168],"<":[],">":[],lifetime:[],":":[],self:[169],"||":[],"::":[],let:[],mut:[],"&":[168],"*":[168],"~":[168],"@":[168],loop:[],unsafe:[],"for":[],"in":[],"true":[170],"false":[170],litchar:[170],litfloat:[170],litint:[170],litstr:[170],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[168],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},BE:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[175],"#":[],"[":[174],"]":[],ident:[173],"=":[],"(":[174],")":[],pub:[],priv:[],fn:[],"->":[],"!":[172],"<":[],">":[],lifetime:[],":":[],self:[173],"||":[175],"::":[],let:[],mut:[],"&":[172],"*":[172],"~":[172],"@":[172],loop:[],unsafe:[],"for":[],"in":[],"true":[174],"false":[174],litchar:[174],litfloat:[174],litint:[174],litstr:[174],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[172],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[176],"break":[177],"continue":[178],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},NBE:{";":[],"if":[179],"{":[180],"}":[],"else":[],"while":[180],match:[179],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[180],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[180],unsafe:[180],"for":[180],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},QE0:{";":[181],"if":[182],"{":[182],"}":[181],"else":[],"while":[182],match:[182],"=>":[],",":[181],"|":[182],"#":[],"[":[182],"]":[],ident:[182],"=":[],"(":[182],")":[],pub:[],priv:[],fn:[],"->":[],"!":[182],"<":[],">":[],lifetime:[],":":[],self:[182],"||":[182],"::":[],let:[],mut:[],"&":[182],"*":[182],"~":[182],"@":[182],loop:[182],unsafe:[182],"for":[182],"in":[],"true":[182],"false":[182],litchar:[182],litfloat:[182],litint:[182],litstr:[182],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[182],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[181]},TC:{";":[183],"if":[],"{":[],"}":[183],"else":[],"while":[],match:[],"=>":[],",":[183],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[184],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[183]},HP4:{";":[],"if":[],"{":[185],"}":[],"else":[],"while":[185],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[186],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[185],unsafe:[185],"for":[185],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},E:{";":[],"if":[190],"{":[191],"}":[],"else":[],"while":[191],match:[190],"=>":[],",":[],"|":[],"#":[],"[":[189],"]":[],ident:[188],"=":[],"(":[189],")":[],pub:[],priv:[],fn:[],"->":[],"!":[187],"<":[],">":[],lifetime:[],":":[],self:[188],"||":[],"::":[],let:[],mut:[],"&":[187],"*":[187],"~":[187],"@":[187],loop:[191],unsafe:[191],"for":[191],"in":[],"true":[189],"false":[189],litchar:[189],litfloat:[189],litint:[189],litstr:[189],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[187],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},E0:{";":[],"if":[195],"{":[196],"}":[],"else":[],"while":[196],match:[195],"=>":[],",":[],"|":[197],"#":[],"[":[194],"]":[],ident:[193],"=":[],"(":[194],")":[],pub:[],priv:[],fn:[],"->":[],"!":[192],"<":[],">":[],lifetime:[],":":[],self:[193],"||":[197],"::":[],let:[],mut:[],"&":[192],"*":[192],"~":[192],"@":[192],loop:[196],unsafe:[196],"for":[196],"in":[],"true":[194],"false":[194],litchar:[194],litfloat:[194],litint:[194],litstr:[194],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[192],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TFQ:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[198],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[199],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TP1:{";":[200],"if":[],"{":[200],"}":[200],"else":[],"while":[],match:[],"=>":[],",":[200],"|":[200],"#":[],"[":[],"]":[200],ident:[],"=":[200],"(":[200],")":[200],pub:[],priv:[],fn:[],"->":[],"!":[200],"<":[200],">":[200],lifetime:[],":":[],self:[],"||":[200],"::":[201],let:[],mut:[],"&":[200],"*":[200],"~":[],"@":[],loop:[],unsafe:[],"for":[200],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[200],"-=":[200],"*=":[200],"/=":[200],"%=":[200],"^=":[200],"&=":[200],"|=":[200],"<<=":[200],">>=":[200],"+":[200],"-":[200],"&&":[200],".":[200],"/":[200],"%":[200],"^":[200],"<<":[200],">>":[200],"<=":[200],"==":[200],"!=":[200],">=":[200],as:[200],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[200]},LI:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[202],"#":[],"[":[],"]":[],ident:[203],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TLI:{";":[],"if":[],"{":[],"}":[204],"else":[],"while":[],match:[],"=>":[],",":[205],"|":[204],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},LE0:{";":[],"if":[207],"{":[207],"}":[],"else":[],"while":[207],match:[207],"=>":[],",":[],"|":[207],"#":[],"[":[207],"]":[206],ident:[207],"=":[],"(":[207],")":[206],pub:[],priv:[],fn:[],"->":[],"!":[207],"<":[],">":[],lifetime:[],":":[],self:[207],"||":[207],"::":[],let:[],mut:[],"&":[207],"*":[207],"~":[207],"@":[207],loop:[207],unsafe:[207],"for":[207],"in":[],"true":[207],"false":[207],litchar:[207],litfloat:[207],litint:[207],litstr:[207],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[207],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TLE0:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[209],"|":[],"#":[],"[":[],"]":[208],ident:[],"=":[],"(":[],")":[208],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},SV:{";":[],"if":[],"{":[],"}":[210],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[211],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TSV:{";":[],"if":[],"{":[],"}":[212],"else":[],"while":[],match:[],"=>":[],",":[213],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},SC:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[214],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TSC:{";":[215],"if":[],"{":[216],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[215],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TSC1:{";":[217],"if":[],"{":[],"}":[217],"else":[],"while":[],match:[],"=>":[],",":[217],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[218],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},SD:{";":[],"if":[],"{":[],"}":[219],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[220],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TSD:{";":[],"if":[],"{":[],"}":[221],"else":[],"while":[],match:[],"=>":[],",":[222],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},IMPL:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[223],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},LFN:{";":[],"if":[],"{":[],"}":[224],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[225],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TRAIT:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[226],use:[],mod:[],"enum":[],_:[],$:[]},LFS:{";":[],"if":[],"{":[],"}":[227],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[228],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},USE:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[229],mod:[],"enum":[],_:[],$:[]},TUSE:{";":[230],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[231],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TTUSE:{";":[],"if":[],"{":[233],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[234],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[232],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},MOD:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[235],"enum":[],_:[],$:[]},ENUM:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[236],_:[],$:[]},LEN:{";":[],"if":[],"{":[],"}":[237],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[238],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TLEN:{";":[],"if":[],"{":[],"}":[239],"else":[],"while":[],match:[],"=>":[],",":[240],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},EN:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[241],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TEN:{";":[],"if":[],"{":[243],"}":[242],"else":[],"while":[],match:[],"=>":[],",":[242],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[242],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},DES:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[245],"=":[],"(":[246],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[244],$:[]},TDES:{";":[247],"if":[],"{":[249],"}":[247],"else":[],"while":[],match:[],"=>":[247],",":[247],"|":[247],"#":[],"[":[],"]":[],ident:[],"=":[247],"(":[248],")":[247],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[247],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[247],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},DES1:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[251],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[250],$:[]},TDES1:{";":[252],"if":[],"{":[252],"}":[252],"else":[],"while":[],match:[],"=>":[252],",":[252],"|":[252],"#":[],"[":[],"]":[],ident:[],"=":[252],"(":[252],")":[252],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[252],self:[],"||":[],"::":[253],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[252],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[254],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},DES2:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[255],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TDES2:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[257],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[256],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},DES3:{";":[],"if":[],"{":[],"}":[258],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[259],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TDES3:{";":[],"if":[],"{":[],"}":[260],"else":[],"while":[],match:[],"=>":[],",":[261],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},DES3_ITEM:{";":[],"if":[],"{":[],"}":[],"else":[],"while":[],match:[],"=>":[],",":[],"|":[],"#":[],"[":[],"]":[],ident:[262],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]},TDES3_ITEM:{";":[],"if":[],"{":[],"}":[263],"else":[],"while":[],match:[],"=>":[],",":[263],"|":[],"#":[],"[":[],"]":[],ident:[],"=":[],"(":[],")":[],pub:[],priv:[],fn:[],"->":[],"!":[],"<":[],">":[],lifetime:[],":":[264],self:[],"||":[],"::":[],let:[],mut:[],"&":[],"*":[],"~":[],"@":[],loop:[],unsafe:[],"for":[],"in":[],"true":[],"false":[],litchar:[],litfloat:[],litint:[],litstr:[],"+=":[],"-=":[],"*=":[],"/=":[],"%=":[],"^=":[],"&=":[],"|=":[],"<<=":[],">>=":[],"+":[],"-":[],"&&":[],".":[],"/":[],"%":[],"^":[],"<<":[],">>":[],"<=":[],"==":[],"!=":[],">=":[],as:[],"return":[],"break":[],"continue":[],struct:[],impl:[],trait:[],use:[],mod:[],"enum":[],_:[],$:[]}},NT_WHOSE_FOLLOWSET_HAS_GT_NOT_SHR=["TY2","TTY","TY1","TRT","RT","TY","TVD","LG","TLLG","LLG","TLTY","LTY"],RULES=[["S",["B"],"$e = $a[0];"],["B",["e"],"$e = new NODE.Block();"],["B",[";","B"],"$a[1].unshift($a[0]); $e = $a[1];"],["B",["L","B"],"$a[1].unshift($a[0]); $e = $a[1];"],["B",["BE","TB"],"$a[1].unshift($a[1].items.length === 0 ? $a[0] : $a[0].node); $e = $a[1];"],["B",["NBE","B"],"$a[1].unshift($a[0]); $e = $a[1];"],["B",["VIS","TVIS","B"],"$a[2].unshift($a[1]); $e = $a[2];"],["B",["AT","B"],"$a[1].unshift($a[0]); $e = $a[1];"],["TB",["e"],"$e = new NODE.Block();"],["TB",[";","B"],"$a[1].unshift($a[0]); $e = $a[1];"],["IF",["if","E","{","B","}","TIF"],"$a[5].unshift([[$a[0]], exprToAST($a[1]), $a[2], [[], $a[3]], $a[4]]); $e = new NODE.If($a[5]);"],["TIF",["e"],"$e = [];"],["TIF",["else","TEL"],"$a[1][0][0].unshift($a[0]); $e = $a[1];"],["TEL",["{","B","}"],"$e = [[[], null, $a[0], [[], $a[1]], $a[2]]];"],["TEL",["IF"],"$e = $a[0].children;"],["WH",["while","E","{","B","}"],"$e = new NODE.While([$a[0], exprToAST($a[1]), $a[2], $a[3], $a[4]]);"],["MT",["match","E","{","MA","}"],"$e = new NODE.Match(exprToAST($a[1]), $a[3]);"],["MA",["e"],"$e = [];"],["MA",["MP","=>","MB"],"$a[2][1].unshift([$a[0], $a[2][0]]); $e = $a[2][1];"],["MB",["BE","TMB1"],"$e = $a;"],["MB",["NBE","TMB2"],"$e = $a;"],["TMB1",["e"],"$e = [];"],["TMB1",[",","MA"],"$e = $a[1];"],["TMB2",["MA"],"$e = $a[0];"],["TMB2",[",","MA"],"$e = $a[1];"],["MP",["LIT","LLIT"],"$a[1].unshift($a[0]); $e = $a[1];"],["MP",["DES"],"$e = $a[0];"],["LLIT",["e"],"$e = [];"],["LLIT",["|","LIT","LLIT"],"$a[2].unshift($a[1]); $e = $a[2];"],["AT",["#","[","AI","LAI","]"],"$e = new NODE.Attribute($a);"],["LAI",["e"],"$e = null;"],["LAI",[",","AI","LAI"],"$e = null;"],["AI",["ident","TAI"],"$e = null;"],["TAI",["e"],"$e = null;"],["TAI",["=","LIT"],"$e = null;"],["TAI",["(","AI","LAI",")"],"$e = null;"],["VIS",["e"],"$e = null;"],["VIS",["pub"],"$e = null;"],["VIS",["priv"],"$e = null;"],["TVIS",["FN"],"$e = $a[0];"],["TVIS",["SC"],"$e = $a[0];"],["TVIS",["TRAIT"],"$e = $a[0];"],["TVIS",["IMPL"],"$e = $a[0];"],["TVIS",["USE"],"$e = $a[0];"],["TVIS",["MOD"],"$e = $a[0];"],["TVIS",["ENUM"],"$e = $a[0];"],["HFN",["fn","ident","GE","(","LFA",")","RT"],"$e = $a;"],["FN",["HFN","{","B","}"],"$e = new NODE.Fn($a);"],["FS",["HFN",";"],"$e = $a;"],["RT",["e"],"$e = new NODE.TypeMissing();"],["RT",["->","TRT"],"$e = $a[1];"],["TRT",["!"],"$e = new NODE.TypeDiverging();"],["TRT",["TY"],"$e = $a[0];"],["GE",["e"],"$e = [];"],["GE",["<","LLG",">"],"$e = $a[1];"],["LLG",["e"],"$e = [];"],["LLG",["LG","TLLG"],"$a[1].unshift($a[0]); $e = $a[1];"],["TLLG",["e"],"$e = [];"],["TLLG",[",","LG","TLLG"],"$a[2].unshift($a[1]); $e = $a[2];"],["LG",["ident","TVD"],"$e = $a[0];"],["LG",["lifetime"],"throw new LocatedError('lifetime not supported', $a[0]);"],["LFA",["e"],"$e = [];"],["LFA",["VD","TLFA"],"if ($a[0][0] !== null) $a[1].unshift($a[0]); $e = $a[1];"],["TLFA",["e"],"$e = [];"],["TLFA",[",","VD","TLFA"],"if ($a[1][0] !== null) $a[2].unshift($a[1]); $e = $a[2];"],["VD",["M","DES_OR_SELF","TVD"],"$e = [$a[1], $a[2]];"],["TVD",["e"],"$e = new NODE.TypeMissing();"],["TVD",[":","TY"],"$e = $a[1];"],["DES_OR_SELF",["DES"],"$e = $a[0];"],["DES_OR_SELF",["self"],"$e = null;"],["TY",["M","TY1"],"$e = $a[1];"],["TY",["|","LFA","|","RT"],"$e = new NODE.TypeClosure($a[1], $a[3]);"],["TY",["||","RT"],"$e = new NODE.TypeClosure([], $a[1]);"],["TY1",["ident","TTY","TY2"],"$a[1].unshift(new NODE.Ident($a[0], true)); $e = new NODE.TypeIdent(exprToAST($a[1]), $a[2]);"],["TY1",["[","TY","]"],"$e = new NODE.TypeArray($a[1]);"],["TY1",["(","LTY",")"],"$e = new NODE.TypeTuple($a[1]);"],["TY2",["e"],"$e = [];"],["TY2",["<","LTY",">"],"$e = $a[1];"],["TTY",["e"],"$e = [];"],["TTY",["::","ident","TTY"],"$a[2].unshift(new NODE.Ident($a[1], true)); $a[2].unshift(new NODE.Operator(NODE.ModProperty, $a[0], 2)); $e = $a[2];"],["LTY",["e"],"$e = [];"],["LTY",["TY","TLTY"],"$a[1].unshift($a[0]); $e = $a[1];"],["TLTY",["e"],"$e = [];"],["TLTY",[",","TY","TLTY"],"$a[2].unshift($a[1]); $e = $a[2];"],["L",["let","LP","TVD","TL",";"],"$e = new NODE.Let($a);"],["TL",["e"],"$e = null;"],["TL",["=","E0"],"$e = $a;"],["LP",["M","DES"],"$e = $a[1];"],["M",["e"],"$e = null;"],["M",["mut"],"$e = null;"],["M",["&","TM"],"$e = null;"],["M",["*","TM"],"$e = null;"],["M",["~","TM"],"$e = null;"],["M",["@","TM"],"$e = null;"],["TM",["e"],"$e = null;"],["TM",["mut"],"$e = null;"],["P1",["ident","TP1"],"$a[1].unshift(new NODE.Ident($a[0])); $e = exprToAST($a[1]);"],["P1",["self"],"$e = new NODE.Ident($a[0], true);"],["P2",["LIT"],"$e = $a[0];"],["P2",["(","LE0",")"],"$e = new NODE.Tuple($a);"],["P2",["[","LE0","]"],"$e = new NODE.GenericArray($a);"],["P3",["IF"],"$e = $a[0];"],["P3",["MT"],"$e = $a[0];"],["P4",["WH"],"$e = $a[0];"],["P4",["loop","{","B","}"],"$e = new NODE.Loop($a);"],["P4",["unsafe","{","B","}"],"$e = new NODE.BareBlock($a[2]);"],["P4",["{","B","}"],"$e = new NODE.BareBlock($a[1]);"],["P4",["for","DES","in","E","{","B","}"],"$e = new NODE.For([$a[0], $a[1], $a[2], exprToAST($a[3]), $a[4], $a[5], $a[6]]);"],["P5",["|","LI","|","E0"],"$e = new NODE.Closure($a[1], $a[3]);"],["P5",["||","E0"],"$e = new NODE.Closure([], $a[1]);"],["LIT",["true"],"$e = new NODE.LitBool($a[0]);"],["LIT",["false"],"$e = new NODE.LitBool($a[0]);"],["LIT",["litchar"],"$e = new NODE.LitChar($a[0]);"],["LIT",["litfloat"],"$e = new NODE.LitFloat($a[0]);"],["LIT",["litint"],"$e = new NODE.LitInt($a[0]);"],["LIT",["litstr"],"$e = new NODE.LitStr($a[0]);"],["E1",["e"],"$e = [];"],["E1",["(","LE0",")","TE1","E2"],"$a[3].unshift(new NODE.CallTuple($a[1])); $a[3].unshift(new NODE.Operator(NODE.Apply, null, 2, false, 5)); $a[3] = $a[3].concat($a[4]); $e = $a[3];"],["E1",["!","(","LE0",")","E2"],"$a[4].unshift(new NODE.CallTuple($a[2])); $a[4].unshift(new NODE.Operator(NODE.ApplyMacro, null, 2)); $a[4].unshift(new NODE.Operator(NODE.TrailingNot, $a[0], 1)); $e = $a[4];"],["E1",["=","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2, true)); $e = $a[1];"],["E1",["+=","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2, true)); $e = $a[1];"],["E1",["-=","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2, true)); $e = $a[1];"],["E1",["*=","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2, true)); $e = $a[1];"],["E1",["/=","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2, true)); $e = $a[1];"],["E1",["%=","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2, true)); $e = $a[1];"],["E1",["^=","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2, true)); $e = $a[1];"],["E1",["&=","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2, true)); $e = $a[1];"],["E1",["|=","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2, true)); $e = $a[1];"],["E1",["<<=","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2, true)); $e = $a[1];"],["E1",[">>=","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2, true)); $e = $a[1];"],["E1",["E3"],"$e = $a[0];"],["E2",["e"],"$e = [];"],["E2",["E3"],"$e = $a[0];"],["E3",["+","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2)); $e = $a[1];"],["E3",["-","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2)); $e = $a[1];"],["E3",["&&","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2, false, -1)); $e = $a[1];"],["E3",[".","E"],"$a[1].unshift(new NODE.Operator(NODE.Property, $a[0], 2, false, 5)); $e = $a[1];"],["E3",["*","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2)); $e = $a[1];"],["E3",["&","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2)); $e = $a[1];"],["E3",["/","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2)); $e = $a[1];"],["E3",["%","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2)); $e = $a[1];"],["E3",["^","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2)); $e = $a[1];"],["E3",["|","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2)); $e = $a[1];"],["E3",["<<","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2)); $e = $a[1];"],["E3",[">>","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2)); $e = $a[1];"],["E3",["<","E"],"$a[1].unshift(new NODE.Operator(NODE.CmpOp, $a[0], 2)); $e = $a[1];"],["E3",["<=","E"],"$a[1].unshift(new NODE.Operator(NODE.CmpOp, $a[0], 2)); $e = $a[1];"],["E3",["==","E"],"$a[1].unshift(new NODE.Operator(NODE.CmpOp, $a[0], 2)); $e = $a[1];"],["E3",["!=","E"],"$a[1].unshift(new NODE.Operator(NODE.CmpOp, $a[0], 2)); $e = $a[1];"],["E3",[">=","E"],"$a[1].unshift(new NODE.Operator(NODE.CmpOp, $a[0], 2)); $e = $a[1];"],["E3",[">","E"],"$a[1].unshift(new NODE.Operator(NODE.CmpOp, $a[0], 2)); $e = $a[1];"],["E3",["||","E"],"$a[1].unshift(new NODE.Operator(NODE.BinaryOp, $a[0], 2, false, -1)); $e = $a[1];"],["E3",["as","TY"],"$e = [new NODE.Operator(NODE.As, $a[0], 2), $a[1]];"],["E4",["{","SV","}"],"$e = [new NODE.Operator(NODE.Struct, $a[1], 1)];"],["E4",["E1"],"$e = $a[0];"],["TE1",["e"],"$e = [];"],["TE1",["(","LE0",")","TE1"],"$a[3].unshift(new NODE.CallTuple($a[1])); $a[3].unshift(new NODE.Operator(NODE.Apply, null, 2, false, 5)); $e = $a[3];"],["U",["-"],"$e = new NODE.Operator(NODE.UnaryOp, $a[0], 1, true);"],["U",["!"],"$e = new NODE.Operator(NODE.UnaryOp, $a[0], 1, true);"],["U",["&","TM"],"$e = null;"],["U",["*","TM"],"$e = null;"],["U",["~","TM"],"$e = null;"],["U",["@","TM"],"$e = null;"],["W1",["U","W1"],"if ($a[0] !== null) $a[1].unshift($a[0]); $e = $a[1];"],["W1",["P1","E1"],"$a[1].unshift($a[0]); $e = $a[1];"],["W1",["P2","E2"],"$a[1].unshift($a[0]); $e = $a[1];"],["W1",["P3","E2"],"$a[1].unshift($a[0]); $e = $a[1];"],["W2",["U","W2"],"if ($a[0] !== null) $a[1].unshift($a[0]); $e = $a[1];"],["W2",["P1","E4"],"$a[1].unshift($a[0]); $e = $a[1];"],["W2",["P2","E2"],"$a[1].unshift($a[0]); $e = $a[1];"],["W2",["P3","E2"],"$a[1].unshift($a[0]); $e = $a[1];"],["BE",["U","W2"],"if ($a[0] !== null) $a[1].unshift($a[0]); $e = new NODE.LastExpr(exprToAST($a[1]));"],["BE",["P1","E4"],"$a[1].unshift($a[0]); $e = new NODE.LastExpr(exprToAST($a[1]));"],["BE",["P2","E2"],"$a[1].unshift($a[0]); $e = new NODE.LastExpr(exprToAST($a[1]));"],["BE",["P5"],"$e = new NODE.LastExpr($a[0]);"],["BE",["return","QE0"],"$e = new NODE.LastStmt(new NODE.Return($a));"],["BE",["break"],"$e = new NODE.LastStmt(new NODE.Break($a));"],["BE",["continue","TC"],"$e = new NODE.LastStmt(new NODE.Continue($a));"],["NBE",["P3"],"$e = $a[0];"],["NBE",["HP4","P4"],"$a[1].label = $a[0]; $e = $a[1];"],["QE0",["e"],"$e = null;"],["QE0",["E0"],"$e = $a[0];"],["TC",["e"],"$e = null;"],["TC",["lifetime"],"$e = $a[0];"],["HP4",["e"],"$e = null;"],["HP4",["lifetime",":"],"$e = $a;"],["E",["U","W1"],"if ($a[0] !== null) $a[1].unshift($a[0]); $e = $a[1];"],["E",["P1","E1"],"$a[1].unshift($a[0]); $e = $a[1];"],["E",["P2","E2"],"$a[1].unshift($a[0]); $e = $a[1];"],["E",["P3","E2"],"$a[1].unshift(new NODE.IfExpr($a[0])); $e = $a[1];"],["E",["P4"],"$e = [new NODE.IfExpr($a[0])];"],["E0",["U","W2"],"if ($a[0] !== null) $a[1].unshift($a[0]); $e = exprToAST($a[1]);"],["E0",["P1","E4"],"$a[1].unshift($a[0]); $e = exprToAST($a[1]);"],["E0",["P2","E2"],"$a[1].unshift($a[0]); $e = exprToAST($a[1]);"],["E0",["P3","E2"],"$a[1].unshift(new NODE.IfExpr($a[0])); $e = exprToAST($a[1]);"],["E0",["P4"],"$e = new NODE.IfExpr($a[0]);"],["E0",["P5"],"$e = $a[0];"],["TFQ",["ident"],"$e = new NODE.Ident($a[0]);"],["TFQ",["<","LTY",">"],"$e = $a[1];"],["TP1",["e"],"$e = [];"],["TP1",["::","TFQ","TP1"],"$a[2].unshift($a[1]); $a[2].unshift(new NODE.Operator(NODE.ModProperty, $a[0], 2, false, 5)); $e = $a[2];"],["LI",["e"],"$e = [];"],["LI",["ident","TLI"],"$a[1].unshift($a[0]); $e = $a[1];"],["TLI",["e"],"$e = [];"],["TLI",[",","ident","TLI"],"$a[2].unshift($a[1]); $e = $a[2];"],["LE0",["e"],"$e = [];"],["LE0",["E0","TLE0"],"$a[1].unshift($a[0]); $e = $a[1];"],["TLE0",["e"],"$e = [];"],["TLE0",[",","E0","TLE0"],"$a[2].unshift($a[1]); $e = $a[2];"],["SV",["e"],"$e = [];"],["SV",["ident",":","E0","TSV"],"$a[3].unshift([$a[0], $a[2]]); $e = $a[3];"],["TSV",["e"],"$e = [];"],["TSV",[",","SV"],"$e = $a[1];"],["SC",["struct","ident","GE","TSC"],"$e = new NODE.Sc($a);"],["TSC",["TSC1",";"],"$e = $a[0];"],["TSC",["{","SD","}"],"$e = $a[1];"],["TSC1",["e"],"$e = [];"],["TSC1",["(","TY","TLTY",")"],"$a[2].unshift($a[1]); $e = new NODE.Tuple($a[2]);"],["SD",["e"],"$e = [];"],["SD",["ident",":","TY","TSD"],"$a[3].unshift([$a[0], $a[2]]); $e = $a[3];"],["TSD",["e"],"$e = [];"],["TSD",[",","SD"],"$e = $a[1];"],["IMPL",["impl","P1","for","P1","{","LFN","}"],"$e = new NODE.Impl($a);"],["LFN",["e"],"$e = [];"],["LFN",["FN","LFN"],"$a[1].unshift($a[0]); $e = $a[1];"],["TRAIT",["trait","ident","{","LFS","}"],"$e = new NODE.Trait($a);"],["LFS",["e"],"$e = [];"],["LFS",["FS","LFS"],"$a[1].unshift($a[0]); $e = $a[1];"],["USE",["use","ident","TUSE",";"],"$a[2].unshift($a[1]); $e = new NODE.Use([$a[0], $a[2], $a[3]]);"],["TUSE",["e"],"$e = [];"],["TUSE",["::","TTUSE"],"$e = $a[1];"],["TTUSE",["*"],"throw new LocatedError('using * in `use` statements is not supported', $a[0]);"],["TTUSE",["{","ident","TLI","}"],"$a[2].unshift($a[1]); $e = [$a[2]];"],["TTUSE",["ident","TUSE"],"$a[1].unshift($a[0]); $e = $a[1];"],["MOD",["mod","ident","{","B","}"],"$e = new NODE.Mod($a);"],["ENUM",["enum","ident","GE","{","LEN","}"],"$e = new NODE.Enum($a);"],["LEN",["e"],"$e = [];"],["LEN",["EN","TLEN"],"$a[1].unshift($a[0]); $e = $a[1];"],["TLEN",["e"],"$e = [];"],["TLEN",[",","EN","TLEN"],"$a[2].unshift($a[1]); $e = $a[2];"],["EN",["ident","GE","TEN"],"$e = new NODE.Sc([null, $a[0], $a[1], $a[2]]);"],["TEN",["TSC1"],"$e = $a[0];"],["TEN",["{","SD","}"],"$e = $a[1];"],["DES",["_"],"$e = new NODE.DesIgnore($a[0]);"],["DES",["ident","TDES1","TDES"],"$a[1].unshift(new NODE.Ident($a[0])); $a[2].unshift(exprToAST($a[1])); $e = exprToAST($a[2]);"],["DES",["DES2"],"$e = new NODE.DesTuple($a[0]);"],["TDES",["e"],"$e = [new NODE.Operator(NODE.DesSingle, null, 1)];"],["TDES",["DES2"],"$e = [new NODE.Operator(NODE.DesTupleStruct, $a[0], 1)];"],["TDES",["{","DES3","}"],"$e = [new NODE.Operator(NODE.DesStruct, $a[1], 1)];"],["DES1",["_"],"$e = new NODE.DesIgnore($a[0]);"],["DES1",["ident","TDES1"],"$a[1].unshift($a[0]); $e = exprToAST($a[1]);"],["TDES1",["e"],"$e = [];"],["TDES1",["::","ident","TDES1"],"$a[2].unshift(new NODE.Ident($a[1])); $a[2].unshift(new NODE.Operator(NODE.ModProperty, $a[0], 2)); $e = $a[2];"],["TDES1",[".","ident","TDES1"],"throw new LocatedError('property not supported in destructuring', $a[0]);"],["DES2",["(","DES","TDES2",")"],"$a[2].unshift($a[1]); $e = $a[2];"],["TDES2",["e"],"$e = [];"],["TDES2",[",","DES","TDES2"],"$a[2].unshift($a[1]); $e = $a[2];"],["DES3",["e"],"$e = [];"],["DES3",["DES3_ITEM","TDES3"],"$a[1].unshift($a[0]); $e = $a[1];"],["TDES3",["e"],"$e = [];"],["TDES3",[",","DES3"],"$e = $a[1];"],["DES3_ITEM",["ident","TDES3_ITEM"],"$e = [$a[0], $a[1] === null ? new NODE.DesSingle(null, new NODE.Ident($a[0])) : $a[1]];"],["TDES3_ITEM",["e"],"$e = null;"],["TDES3_ITEM",[":","DES"],"$e = $a[1];"]];
Backlit.prototype.render=function(){this.el.innerHTML=this.sh(this.content,this.selectionStart,this.selectionEnd)},Backlit.prototype.renderWithSelection=function(e,t){this.selectionStart=e,this.selectionEnd=t,this.render(),this.setSelectionRange(this.selectionStart,this.selectionEnd)},Backlit.prototype.visit=function(e){for(var t,n=[this.el];n.length>0&&(t=n.pop(),e(t));)if(0!==t.childNodes.length)for(var i=t.childNodes.length-1;i>=0;i--)n.push(t.childNodes[i])},Backlit.prototype.noticeChanges=function(){var e="",t=document.getSelection(),n=t.anchorNode,i=t.anchorOffset;n.nodeType!==document.TEXT_NODE&&n.childNodes.length>0&&(n=n.childNodes[i],i=0);var r=t.focusNode,a=t.focusOffset;r.nodeType!==document.TEXT_NODE&&r.childNodes.length>0&&(r=r.childNodes[a],a=0);var p=0,l=0,o=!1,s=!1,u=null;this.visit(function(t){return t.nodeType===document.TEXT_NODE?(o||(t===n?(o=!0,p+=i):p+=t.textContent.length),s||(t===r?(s=!0,l+=a):l+=t.textContent.length),e+=t.textContent):"BR"===t.nodeName?(o||(t===n?(o=!0,p+=i):p+=1),s||(t===r?(s=!0,l+=a):l+=1),e+="\n"):(o||t===n&&(o=!0,p+=i),s||t===r&&(s=!0,l+=a),null!==u&&"BR"!==u.nodeName&&"DIV"===t.nodeName&&(o||(p+=1),s||(l+=1),e+="\n")),u=t,!0}),void 0===n&&(o=!0,n=u),void 0===r&&(s=!0,r=u),o&&s&&(this.selectionStart=p,this.selectionEnd=l,e!==this.content&&(this.content=e,this.render(),this.setSelectionRange(this.selectionStart,this.selectionEnd)))},Backlit.prototype.setSelectionRange=function(e,t){var n=0,i=0,r=null,a=0,p=null,l=0;if(this.visit(function(o){if(o.nodeType===document.TEXT_NODE)null===r&&(n+o.textContent.length>=e?(r=o,a=e-n):n+=o.textContent.length),null===p&&(i+o.textContent.length>=t?(p=o,l=t-i):i+=o.textContent.length);else if("BR"===o.nodeName){if(null===r)if(n+1>e){r=o.parentNode;for(var s=0;s<r.childNodes.length;s++)if(r.childNodes[s]===o){a=s;break}}else n+=1;if(null===p)if(i+1>t){p=o.parentNode;for(var s=0;s<p.childNodes.length;s++)if(p.childNodes[s]===o){l=s;break}}else i+=1}return!0}),null===r)throw"new selection anchor node not found in backlit";if(null===p)throw"new selection focus node not found in backlit";this.selectionStart=e,this.selectionEnd=t;var o=document.getSelection(),s=document.createRange();s.setStart(r,a),s.setEnd(p,l),o.removeAllRanges(),o.addRange(s)};